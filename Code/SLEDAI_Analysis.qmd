---
title: "SLEDAI_Analysis.qmd"
format: html
editor: visual
---

### Load Packages

```{r}
library(renv)
library(readxl)
library(dplyr)
library(tidyr)
library(here)
library(snakecase)
library(ggplot2)
library(stringr)
library(writexl)
library(LMMstar)
library(plotly)
#install.packages("targets")
#library(targets)
#use_targets()
set.seed(42069)
```

## Choose mITT or PP (or ITT by leaving both F)

```{r}
mITT = T
PP = F
```

## Load data

```{r}
SLEDAI.data<-read_excel(path = here("Data",paste0("SLEDAI.data.xlsx")))

group_cytokine <- read_excel(path = here("Data",paste0("grouping_cytokine.xlsx")))

sex.data<-read_excel(path = here("Output",paste0(
                       "Questionnaires_combined.xlsx")))|>
  dplyr::select(id, sex)|>distinct()

SLEDAI.data.combined <- SLEDAI.data |> 
  left_join(group_cytokine)|>
  left_join(sex.data)|>
  mutate(
    treat = ifelse(timepoint == "baseline", "control", treatment ),
    m_1_2_quantile_at_baseline = 
           factor(findInterval(m_1_2, 
           c(-Inf, quantile(m_1_2, probs=c(0.33, .67), na.rm =T), Inf)),
           labels=c("lowest 33%","33-67%","highest 33%")))|>
  relocate(id, timepoint, treat, treatment, sex
           )

SLEDAI.data.combined

if (PP){
  PP_list <- read_excel(
    path=here("Output","Compliance.xlsx"))
  SLEDAI.data.combined <- SLEDAI.data.combined |> left_join(PP_list)
}
```

##Make the models

```{r}
model_secondary3.main.SLEDAI.lmm<-lmm(
  formula = SLEDAI_score ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = SLEDAI.data.combined
)
summary(model_secondary3.main.SLEDAI.lmm, level = 0.95)
plot(model_secondary3.main.SLEDAI.lmm, type=c("qqplot"))
plot(model_secondary3.main.SLEDAI.lmm, type=c("scatterplot"))

if(PP){
  SLEDAI.data.combined.PP<-SLEDAI.data.combined|>filter(PP)
  
  
  model_secondary3.mainPP.SLEDAI.lmm<-lmm(
  formula = SLEDAI_score ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = SLEDAI.data.combined.PP
)
summary(SLEDAI.data.combined.PP)
plot(SLEDAI.data.combined.PP, type=c("qqplot"))
plot(SLEDAI.data.combined.PP, type=c("scatterplot"))

}

model_exploratory1.main.VASphysician.lmm<-lmm(
  formula = vas_sledai_physician ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = SLEDAI.data.combined
)
summary(model_exploratory1.main.VASphysician.lmm, level = 0.95)
plot(model_exploratory1.main.VASphysician.lmm, type=c("qqplot"))
plot(model_exploratory1.main.VASphysician.lmm, type=c("scatterplot"))

#----------------------------------
#  Interaction Models:
#----------------------------------

model_secondary4.interaction_m12.SLEDAI.lmm<-lmm(
  formula = 
    SLEDAI_score ~ timepoint+treat+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = SLEDAI.data.combined
)

summary(model_secondary4.interaction_m12.SLEDAI.lmm, level = 0.95)


if(PP){
model_secondary4.interaction_m12_PP.SLEDAI.lmm<-lmm(
  formula = 
    SLEDAI_score ~ timepoint+treat+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = SLEDAI.data.combined.PP
)

summary(model_secondary4.interaction_m12_PP.SLEDAI.lmm, level = 0.95)
}

model_exploratory1.interaction_m_1_2.VASphysician.lmm<-lmm(
  formula = vas_sledai_physician ~ timepoint+treat+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = SLEDAI.data.combined
)

summary(model_exploratory1.interaction_m_1_2.VASphysician.lmm, level = 0.95)
plot(model_exploratory1.interaction_m_1_2.VASphysician.lmm, 
     type = "fit", color = "treatment", obs.alpha = 0.25, ci = F)

plot(model_exploratory1.interaction_m_1_2.VASphysician.lmm, 
     type = "fit", color = "treat", obs.alpha = 0.25, ci = F,
     time.var = "m_1_2")


plot(model_secondary4.interaction_m12.SLEDAI.lmm, 
     type = "fit", color = "treat", obs.alpha = 0.25, ci = F,
     time.var = "m_1_2")

plot(model_exploratory1.interaction_m_1_2.VASphysician.lmm, 
     type = "fit", color = "treatment", obs.alpha = 0.25, ci = F,
     time.var = "timepoint", facet = ~ cut_interval(m_1_2, 3))


```

### Save Modeltabels for aggregation in other file

```{r}

  SLEDAI_lmm_list <- 
  list(
    SLEDAI_main = 
      model.tables(model_secondary3.main.SLEDAI.lmm),
    SLEDAI_interaction = 
      model.tables(model_secondary4.interaction_m12.SLEDAI.lmm))
  
  VAS_Physician_lmm_list <- 
   list(
     main_VAS_physician = 
       model.tables(model_exploratory1.main.VASphysician.lmm),
     interaction_VAS_physician = 
       model.tables(model_exploratory1.interaction_m_1_2.VASphysician.lmm))


if(PP){
  SLEDAI_lmm_list_PP <- 
    list(
        SLEDAI_main_PP = model.tables(model_secondary3.mainPP.SLEDAI.lmm),
        SLEDAI_interaction_PP = model.tables(model_secondary4.interaction_m12_PP.SLEDAI.lmm))
  
  saveRDS(object = SLEDAI_lmm_list_PP,
           file = here("Output","LMMlists","SLEDAI_lmm_list_PP.rds"))
  
}
  
saveRDS(object = SLEDAI_lmm_list,
           file = here("Output","LMMlists","SLEDAI_lmm_list.rds"))
  
saveRDS(object = VAS_Physician_lmm_list,
           file = here("Output","LMMlists","VAS_Physician_lmm_list.rds"))


```

## The End

```{r}
print("This is the end of SLEDAIanalysis.qmd")
```
