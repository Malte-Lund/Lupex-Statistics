---
title: "OtherExploratoryOutcomes"
author: "Malte"
format: html
editor: visual
---

# Other Exploratory Outcomes - LUPEX

### Load Packages

```{r}
library(renv)
#renv::init()
#install.packages("readxl")
library("readxl")
library(dplyr)
library(here)
library(snakecase)
library(ggplot2)
library(stringr)
library(writexl)
library(LMMstar)
library(stringr)
library(lubridate)
set.seed(69420)


```

# Choose PP or mITT

```{r}
mITT = T
PP = F
```

# Diet-Analysis

## Load the data

```{r}
excelfile<-dir(path=here("Data","Kostregistreringer fra Vitakost"))%>%str_detect(pattern=".xlsx")
files <- dir(path=here("Data","Kostregistreringer fra Vitakost"))[excelfile]

substr(files[15], start = 1, stop = 6)

#make data.frame to populate
id<-rep(NA_character_, length(files))
date<-rep(NA_character_, length(files))
timepoint<-rep(NA_character_, length(files))
energy_kJ <- rep(NA_real_, length(files))
fat_g<-rep(NA_real_, length(files))
carbohydrate_g<-rep(NA_real_, length(files))
protein_g<-rep(NA_real_, length(files))
alcohol_g<-rep(NA_real_, length(files))

dietaryregistration<-data.frame(id, files, date, timepoint, energy_kJ, fat_g, carbohydrate_g, protein_g, alcohol_g)%>%mutate(
  id = to_snake_case(substr(files, start = 1, stop = 6)),
  timepoint = case_when(
    substr(files, start = 7, stop = 7) == "a" ~ "Baseline",
    substr(files, start = 7, stop = 7) == "b" ~ "Followup",
    T~NA_character_
  ),
  date = str_extract(string=files,pattern="[0-9_-]+(?=\\.xlsx)")%>%str_replace_all(pattern="_",replacement="/"),
  date_as_dmy = dmy(date)
)
```

## For loop to calculate the intake per day

```{r}
for (file in files){
data<-read_excel(path=here("Data","Kostregistreringer fra Vitakost",file))

dietaryregistration$energy_kJ[match(file,files)]<-
          sum(data["Energy (kJ)"], na.rm =T)
dietaryregistration$fat_g[match(file,files)] <- 
          sum(data["Fat (g)"], na.rm =T)
dietaryregistration$carbohydrate_g[match(file,files)] <- 
      sum(data["Carbohydrate, available (g)"], na.rm =T)
dietaryregistration$protein_g[match(file,files)] <- 
      sum(data["Protein (g)"], na.rm =T)
dietaryregistration$alcohol_g[match(file,files)]<- 
      sum(data["Alcohol (g)"], na.rm =T)
  
}

dietsummaries<-dietaryregistration %>%
  group_by(id,timepoint)%>%
  summarise(Energy_kJ_mean =     round(mean(energy_kJ, na.rm=T),2),
            fat_g_mean =         round(mean(fat_g, na.rm=T),2),
            carbohydrate_g_mean= round(mean(carbohydrate_g,na.rm=T),2),
            protein_g_mean =     round(mean(protein_g,na.rm=T),2),
            alcohol_g_mean =     round(mean(alcohol_g,na.rm=T),2))

write_xlsx(x=dietsummaries,
           path=here("Data","DietaryReports.xlsx"))

```

## Combine the dataset

```{r}
dietsummaries_loaded<-read_excel(path=here("Data","DietaryReports.xlsx"))%>%
  mutate(id=to_snake_case(id))


group_cytokine<-read_excel(path = here("Data","grouping_cytokine.xlsx"))

#we draw the sex of participants from the VO2max-data
sex.data <- read_excel(path =  here("Data","vo2max_mITT.xlsx"))%>%dplyr::select(
                                                        id,sex
                                                      )
sex.data<-sex.data[!duplicated(sex.data), ]

diet_group<-left_join(dietsummaries_loaded,group_cytokine, by=join_by(id))%>%mutate(
  treat = case_when(
    timepoint == "Baseline" ~ "control",
    timepoint == "Followup" ~ treatment,
    T~ NA_character_
  ))%>%left_join(sex.data, by=join_by(id))%>%relocate(
    id, sex, treat, timepoint
  )

```

## Models for Energy, Fat, Carbohydrate, Protein, Alcohol intake changes by intervention:

```{r}
model1.energy.lmm<-lmm(
  formula = Energy_kJ_mean ~ timepoint+treat+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = diet_group
)
summary(model1.energy.lmm)
plot(model1.energy.lmm, type = "scatterplot")
plot(model1.energy.lmm, type = "qqplot")
#anova(model1.energy.lmm)

model1.fat.lmm<-lmm(
  formula = fat_g_mean ~ timepoint+treat+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = diet_group
)
summary(model1.fat.lmm)
plot(model1.fat.lmm, type = "scatterplot")
plot(model1.fat.lmm, type = "qqplot")
#anova(model1.fat.lmm)

model1.carb.lmm<-lmm(
  formula = carbohydrate_g_mean ~ timepoint+treat+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = diet_group
)
summary(model1.carb.lmm)
plot(model1.carb.lmm, type = "scatterplot")
plot(model1.carb.lmm, type = "qqplot")
#anova(model1.carb.lmm) 

model1.protein.lmm<-lmm(
  formula = protein_g_mean ~ timepoint+treat+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = diet_group
)
summary(model1.protein.lmm)
plot(model1.protein.lmm, type = "scatterplot")
plot(model1.protein.lmm, type = "qqplot")
#anova(model1.protein.lmm)

model1.alcohol.lmm<-lmm(
  formula = alcohol_g_mean ~ timepoint+treat+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = diet_group
)
summary(model1.alcohol.lmm)
plot(model1.alcohol.lmm, type = "scatterplot")
plot(model1.alcohol.lmm, type = "qqplot")
#anova(model1.alcohol.lmm)

```

##Models with m_1_2 interaction

```{r}

model2.energy.m12.lmm<-lmm(
  formula = Energy_kJ_mean ~ timepoint+treat+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = diet_group
)
summary(model2.energy.m12.lmm)
plot(model2.energy.m12.lmm, type = "scatterplot")
plot(model2.energy.m12.lmm, type = "qqplot")
#anova(model1.energy.lmm)

model2.fat.m12.lmm<-lmm(
  formula = fat_g_mean ~ timepoint+treat+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = diet_group
)
summary(model2.fat.m12.lmm)
plot(model2.fat.m12.lmm, type = "scatterplot")
plot(model2.fat.m12.lmm, type = "qqplot")
#anova(model2.fat.m12.lmm)

model2.carb.m12.lmm<-lmm(
  formula = carbohydrate_g_mean ~ timepoint+treat+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = diet_group
)
summary(model2.carb.m12.lmm)
plot(model2.carb.m12.lmm, type = "scatterplot")
plot(model2.carb.m12.lmm, type = "qqplot")
#anova(model2.carb.m12.lmm) 

model2.protein.m12.lmm<-lmm(
  formula = protein_g_mean ~ timepoint+treat+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = diet_group
)
summary(model2.protein.m12.lmm)
plot(model2.protein.m12.lmm, type = "scatterplot")
plot(model2.protein.m12.lmm, type = "qqplot")
#anova(model1.protein.lmm)

model2.alcohol.m12.lmm<-lmm(
  formula = alcohol_g_mean ~ timepoint+treat+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = diet_group
)
summary(model2.alcohol.m12.lmm)
plot(model2.alcohol.m12.lmm, type = "scatterplot")
plot(model2.alcohol.m12.lmm, type = "qqplot")
#anova(model2.alcohol.m12.lmm)
```

## Analysis of Body Composition Changes

```{r}
treat.data <- read_excel(path =  here("Data","vo2max.xlsx"))%>%dplyr::select(
                                                        id,sex, treatment
                                                      )
treat.data<-treat.data[!duplicated(treat.data), ]

anthropometric.medicalhistory <- read_excel(path=here("Data/easy_trial_seperate_schemes",                                                   paste0("anamnese_og_objektiv_undersøgelse_baseline_followup.",
                                         ifelse(mITT,"mITT",
                                          ifelse(PP, "PP","")),".data .xlsx")))%>%
  mutate(timepoint=case_when(
    task_name == "Visit 5 - Follow-Up" ~ "followup",
    task_name == "Visit 1 - Samtykke, Telefonopkald, Inklusion + Ekslusion" ~ "screening",
     grepl("Baseline",task_name) ~ "baseline"))%>%
  dplyr::select(id, treatment,sex,timepoint, mITT, PP, 
                højde, weight, taljeomkreds, 
                hvilepuls,
                etnisk_oprindelse, etnicitet_anden, 
                systolisk_bt, diastolisk_bt,
                sle_start_dato,
                medicin_ændringer_siden_baseline,
                tidligere_medicin_sle, #TODO Update so it's clear which medication this is with dummy codes
                aktuel_medicin_sle, #TODO Update so it's clear which medication this is with dummy codes
                relevant_hvilket,
                hvilket_medicin_anden_relevant,
                hvilket_medicin_anden_relevant_001,
                hvilket_medicin_002,
                rituximab, dosis_rtx, seneste_rtx, 
                cyklofosfamid, dosis_cyclo,senest_cyclo, 
                andet_medicin, hvilket_andet, dosis_andet,
                andet_med_2, hvilket_andet_med_2, andet_med_dosis,
                andet_med_3, hvilket_andet_med_3, dosis_andet_med_3,
                andet_med_4, hvilket_andet_med_4, dosis_andet_med_4
                )%>%mutate(
                  height = højde,
  waist_circumference = taljeomkreds,
  resting_pulse=hvilepuls,
  ethnicity = case_when(
    etnisk_oprindelse == 0 ~ "Caucasian",
    etnisk_oprindelse == 1 ~ "Asian",
    etnisk_oprindelse == 2 ~ case_when(
      etnicitet_anden == "mellemøsten" ~ "Middle-Eastern",
      etnicitet_anden == "Afrikaner" ~ "African",
      etnicitet_anden == "Argentina" ~ "Latin America",
      etnicitet_anden == "Iran" ~ "Middle-Eastern",
      T ~ NA_character_
    ),
      id              == "lup_014" ~ "Caucasian",
    T~NA_character_
  ),
  .keep="all")%>%dplyr::select(-c(
    højde, taljeomkreds
  ))%>%left_join(group_cytokine, by=join_by(id))%>%
  left_join(treat.data, by=join_by(id, sex))%>%
  mutate(
    WHR = waist_circumference/height,
    bmi=weight/(height/100)^2,
    treat = case_when(
      timepoint == "baseline" ~ "control",
      timepoint == "screening" ~ "control",
      T~treatment
    )
  )


```

##Model on BMI, WHR and Weight

```{r}
model1.bmi.lmm<-lmm(
  formula = bmi ~ timepoint+treat+treat:timepoint+ m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = anthropometric.medicalhistory
)
summary(model1.bmi.lmm)
plot(model1.bmi.lmm, type = "scatterplot")
plot(model1.bmi.lmm, type = "qqplot")
#anova(model1.energy.lmm)

model1.bmi.lmm.m12.lmm<-lmm(
  formula = bmi ~ timepoint+treat+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = anthropometric.medicalhistory
)
summary(model1.bmi.lmm.m12.lmm)
plot(model1.bmi.lmm.m12.lmm, type = "scatterplot")
plot(model1.bmi.lmm.m12.lmm, type = "qqplot")
#anova(model2.fat.m12.lmm)
```

# DXA Scans

## Load Data

```{r}
dateDXAScannerChange<-lubridate::ymd("2023/07/10") #Due to heat the DXA broke down in july 2023 We changed to a different system for the rest of the study
intervalDXAOld <- lubridate::interval(ymd("2020/01/01"),dateDXAScannerChange)
intervalDXANew <- lubridate::interval(dateDXAScannerChange+1,"2025/01/01")

dxa.metadata <- 
  read_excel(
    path=
      here("Data", 
           "easy_trial_seperate_schemes",
           "_c_visit__anthropometrics_and_dxa.data .xlsx"))|>
  mutate(
             timepoint = case_when(
               grepl("aseline", task_name) ~ "baseline",
               grepl("ollow", task_name) ~ "followup"
             ),
             treat = ifelse(timepoint == "baseline", "control", treatment),
             date = ymd(dato_dxa),
             DXA_old_new = case_when(
               date %within% intervalDXAOld ~ "old",
               date %within% intervalDXANew ~ "new",
               T~NA_character_
             )
           )

dxa.data.raw<-read_excel(
    path=
      here("Data", 
           "LUPEX_DXA_SAMLET_HELKROP_KOMP.xlsx"))

dxa.data.needed<-dxa.data.raw|>
  mutate(date = ymd(Scanningsdato),
         id = to_snake_case(`Patient ID`),
         sex = case_when(`Køn`=="Kvinde" ~ "F",
                         `Køn`=="Mand"   ~ "M",
                         T ~ NA_character_),
         height_cm = as.numeric(str_remove_all(`Højde`, "[, cm]"))/10,
         weight_kg = as.numeric(str_remove_all(`Vægt`, "[, kg]"))/10,
         TotalLean_g = as.numeric(str_remove_all(`Total Fedtfri masse...65`, "[ //.g]")),
         TotalAdipose_g = as.numeric(str_remove_all(`Total Fedtmasse`, "[ //.g]")),
         TotalAdipose_percentage = `Total Væv %Fedt`*100,
         Total_Adipose_Android_g =as.numeric(str_remove_all(`Android Fedtmasse`, "[ //.g]")),
         Adipose_android_percentage = `Android Væv %Fedt`*100,
         Total_Adipose_gyneoid_g = as.numeric(str_remove_all(`Gynoid Fedtmasse`, "[ //.g]")),
         Gyneoid_android_percentage = `Gynoid Væv %Fedt`*100,
         legs_lean_mass= as.numeric(str_remove_all(`Ben Fedtfri masse...55`, "[ //.g]")),
         remove = case_when(id == "lup_003" & date == "2022-05-17" ~ T,
                            id == "lup_021" ~ T,
                            id == "lup_006" ~ T,
                            T ~ F),
         .keep = "none")|>
  filter(!remove)

dxa.data <- 
  dxa.metadata |>
  left_join(dxa.data.needed, by = join_by(id, date, sex))

dxa.data|>
  ggplot(aes(
    x = total_fat, 
    y = TotalAdipose_g, 
    color = DXA_old_new))+
  geom_point()+
  stat_smooth(method = "lm")
 
dxa.data|>
  ggplot(aes(
    x = total_muscle_mass_g, 
    y = TotalLean_g, 
    color = DXA_old_new))+
  geom_point()+
  stat_smooth(method = "lm")
 
dxa.data|>
  ggplot(aes(x = android_fat_mass_g, 
             y = Total_Adipose_Android_g, 
             color = DXA_old_new))+
  geom_point()+
  stat_smooth(method = "lm")
 
dxa.data|>
  ggplot(aes(x = gynoid_fatt_mass_g,
             y = Total_Adipose_gyneoid_g,
             color = DXA_old_new))+
  geom_point()+
  stat_smooth(method = "lm")
 

```

## Models

### Main effects

```{r}
model.main.adiposeDXA.lmm<-lmm(
  formula = TotalAdipose_g ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
summary(model.main.adiposeDXA.lmm)
plot(model.main.adiposeDXA.lmm, type = "scatterplot")
plot(model.main.adiposeDXA.lmm, type = "qqplot")
plot(model.main.adiposeDXA.lmm, type = "fit", ci = F, ci.alpha = 0.10, obs.alpha = 0.4, color = "treatment")

model.main.adiposepercentageDXA.lmm<-lmm(
  formula = TotalAdipose_percentage ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
summary(model.main.adiposepercentageDXA.lmm)
plot(model.main.adiposepercentageDXA.lmm, type = "scatterplot")
plot(model.main.adiposepercentageDXA.lmm, type = "qqplot")
plot(model.main.adiposepercentageDXA.lmm, type = "fit", ci = F, ci.alpha = 0.10, obs.alpha = 0.4, color = "treatment")


model.main.lean_mass.lmm<-lmm(
  formula = TotalLean_g ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
summary(model.main.lean_mass.lmm)
plot(model.main.lean_mass.lmm, type = "scatterplot")
plot(model.main.lean_mass.lmm, type = "qqplot")

model.main.leg_lean_mass.lmm<-lmm(
  formula = legs_lean_mass ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
summary(model.main.leg_lean_mass.lmm)
plot(model.main.leg_lean_mass.lmm, type = "scatterplot")
plot(model.main.leg_lean_mass.lmm, type = "qqplot")


model.main.gyneoidDXA.lmm<-lmm(
  formula = Total_Adipose_gyneoid_g ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
summary(model.main.gyneoidDXA.lmm)
plot(model.main.gyneoidDXA.lmm, type = "scatterplot")
plot(model.main.gyneoidDXA.lmm, type = "qqplot")
plot(model.main.gyneoidDXA.lmm, type = "fit", ci = F, ci.alpha = 0.10, obs.alpha = 0.4, color = "treatment")

model.main.androidDXA.lmm<-lmm(
  formula = Total_Adipose_Android_g ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
summary(model.main.androidDXA.lmm)
plot(model.main.androidDXA.lmm, type = "scatterplot")
plot(model.main.androidDXA.lmm, type = "qqplot")
plot(model.main.androidDXA.lmm, type = "fit", 
     ci = F, ci.alpha = 0.10, 
     obs.alpha = 0.4, color = "treatment")



```

### Interaction Effects

```{r}
model.interaction.adiposeDXA.lmm<-lmm(
  formula = TotalAdipose_g ~ timepoint+m_1_2+treat:timepoint+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
summary(model.interaction.adiposeDXA.lmm)
plot(model.interaction.adiposeDXA.lmm, type = "scatterplot")
plot(model.interaction.adiposeDXA.lmm, type = "qqplot")
plot(model.interaction.adiposeDXA.lmm, type = 
       "fit", ci = F, ci.alpha = 0.10, obs.alpha = 0.4, 
     color = "treatment", facet = ~ cut_interval(m_1_2, 3))

model.interaction.adiposeDXA.nosex.lmm<-lmm(
  formula = TotalAdipose_g ~ timepoint+m_1_2+treat:timepoint+treat:timepoint:m_1_2,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
plot(model.interaction.adiposeDXA.nosex.lmm, type = 
       "fit", ci = F, ci.alpha = 0.10, obs.alpha = 0.4, 
     color = "treatment", facet = ~ cut_interval(m_1_2, 3))

model.interaction.adiposepercentageDXA.lmm<-lmm(
  formula = TotalAdipose_percentage ~ timepoint+m_1_2+treat:timepoint+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
summary(model.interaction.adiposepercentageDXA.lmm)
plot(model.interaction.adiposepercentageDXA.lmm, type = "scatterplot")
plot(model.interaction.adiposepercentageDXA.lmm, type = "qqplot")
plot(model.interaction.adiposepercentageDXA.lmm, type = 
       "fit", ci = F, ci.alpha = 0.10, obs.alpha = 0.4, 
     color = "treatment", facet = ~ cut_interval(m_1_2, 3))


model.interaction.lean_mass.lmm<-lmm(
  formula = TotalLean_g ~ timepoint+m_1_2+treat:timepoint+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
summary(model.interaction.lean_mass.lmm)
plot(model.interaction.lean_mass.lmm, type = "scatterplot")
plot(model.interaction.lean_mass.lmm, type = "qqplot")
plot(model.interaction.lean_mass.lmm, type = 
       "fit", ci = F, ci.alpha = 0.10, obs.alpha = 0.4, 
     color = "treatment", facet = ~ cut_interval(m_1_2, 3))

model.interaction.leg_lean_mass.lmm<-lmm(
  formula = legs_lean_mass ~ timepoint+m_1_2+treat:timepoint+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
summary(model.interaction.leg_lean_mass.lmm)
plot(model.interaction.leg_lean_mass.lmm, type = "scatterplot")
plot(model.interaction.leg_lean_mass.lmm, type = "qqplot")
plot(model.interaction.leg_lean_mass.lmm, type = 
       "fit", ci = F, ci.alpha = 0.10, obs.alpha = 0.4, 
     color = "treatment", facet = ~ cut_interval(m_1_2, 3))


model.interaction.gyneoidDXA.lmm<-lmm(
  formula = Total_Adipose_gyneoid_g ~ timepoint+m_1_2+treat:timepoint+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
summary(model.interaction.gyneoidDXA.lmm)
plot(model.interaction.gyneoidDXA.lmm, type = "scatterplot")
plot(model.interaction.gyneoidDXA.lmm, type = "qqplot")
plot(model.interaction.gyneoidDXA.lmm, type = 
       "fit", ci = F, ci.alpha = 0.10, obs.alpha = 0.4, 
     color = "treatment", facet = ~ cut_interval(m_1_2, 3))

model.interaction.androidDXA.lmm<-lmm(
  formula = Total_Adipose_Android_g ~ timepoint+m_1_2+treat:timepoint+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = dxa.data
)
summary(model.interaction.androidDXA.lmm)
plot(model.interaction.androidDXA.lmm, type = "scatterplot")
plot(model.interaction.androidDXA.lmm, type = "qqplot")
plot(model.interaction.androidDXA.lmm, type = "fit", 
     ci = F, ci.alpha = 0.10, 
     obs.alpha = 0.4, color = "treatment")

```

# Pulmonary Function Tests

## Load Data

```{r}
lfu.data <- 
  read_excel(
    path=
      here("Data", 
           "easy_trial_seperate_schemes",
           "_d_visit__lfu.data .xlsx"))|>
  mutate( 
    timepoint = case_when(
               grepl("aseline", task_name) ~ "baseline",
               grepl("ollow", task_name) ~ "followup"
             ),
             treat = ifelse(timepoint == "baseline", "control", treatment))

lfu.data
```

## Models


### Main effects
```{r}
model.main.fvc.lmm<-lmm(
  formula = fvc_rå ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.data
)
summary(model.main.fvc.lmm)
plot(model.main.fvc.lmm, type = "scatterplot")
plot(model.main.fvc.lmm, type = "qqplot")
plot(model.main.fvc.lmm, type = "fit", ci = F, 
     ci.alpha = 0.10, obs.alpha = 0.2, color = "treatment", facet = ~sex)

model.main.dlco.lmm<-lmm(
  formula = dlc_oc_rå ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.data
)
summary(model.main.dlco.lmm)
plot(model.main.dlco.lmm, type = "scatterplot")
plot(model.main.dlco.lmm, type = "qqplot")
plot(model.main.dlco.lmm, type = "fit", ci = F, 
     ci.alpha = 0.10, obs.alpha = 0.2, color = "treatment", facet = ~sex)

model.main.fev1.lmm<-lmm(
  formula = fev_1 ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.data
)
summary(model.main.fev1.lmm)
plot(model.main.fev1.lmm, type = "scatterplot")
plot(model.main.fev1.lmm, type = "qqplot")
plot(model.main.fev1.lmm, type = "fit", ci = F, 
     ci.alpha = 0.10, obs.alpha = 0.2, color = "treatment", facet = ~sex)

```
### Interaction effects
```{r}
model.interaction.fvc.lmm<-lmm(
  formula = fvc_rå ~ timepoint+m_1_2+treat:timepoint+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.data
)
summary(model.interaction.fvc.lmm)
plot(model.interaction.fvc.lmm, type = "scatterplot")
plot(model.interaction.fvc.lmm, type = "qqplot")
plot(model.interaction.fvc.lmm, type = "fit", ci = F, 
     ci.alpha = 0.10, obs.alpha = 0.2, color = "treatment", facet = ~sex+cut_interval(m_1_2, 3))


model.interaction.dlco.lmm<-lmm(
  formula = dlc_oc_rå ~ timepoint+m_1_2+treat:timepoint+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.data
)
summary(model.interaction.dlco.lmm)
plot(model.interaction.dlco.lmm, type = "scatterplot")
plot(model.interaction.dlco.lmm, type = "qqplot")
plot(model.interaction.dlco.lmm, type = "fit", ci = F, 
     ci.alpha = 0.10, obs.alpha = 0.2, color = "treatment", facet = ~sex+cut_interval(m_1_2, 3))

model.interaction.fev1.lmm<-lmm(
  formula = fev_1 ~ timepoint+m_1_2+treat:timepoint+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.data
)
summary(model.interaction.fev1.lmm)
plot(model.interaction.fev1.lmm, type = "scatterplot")
plot(model.interaction.fev1.lmm, type = "qqplot")
plot(model.interaction.fev1.lmm, type = "fit", ci = F, 
     ci.alpha = 0.10, obs.alpha = 0.2, color = "treatment", facet = ~sex+cut_interval(m_1_2, 3))

```

# Export .RDS of models

```{r}
DXA_models <- list(
  main_total_adipose_g.lmm = model.tables(model.main.adiposeDXA.lmm),
  interaction_total_adipose_g.lmm = model.tables(model.interaction.adiposeDXA.lmm),
  main_total_adipose_percentage.lmm = model.tables(model.main.adiposepercentageDXA.lmm),
  interaction_total_adipose_percentage.lmm = model.tables(model.interaction.adiposepercentageDXA.lmm),
  main_total_lean.lmm = model.tables(model.main.lean_mass.lmm),
  interaction_total_lean.lmm = model.tables(model.interaction.lean_mass.lmm),
  main_gyneoidDXA.lmm = model.tables(model.main.gyneoidDXA.lmm),
  main_androidDXA.lmm = model.tables(model.main.androidDXA.lmm),
  interaction_gyneoidDXA.lmm = model.tables(model.interaction.gyneoidDXA.lmm),
  interaction_androidDXA.lmm = model.tables(model.interaction.androidDXA.lmm)
  )

lung_function_models <- list(
  model.main.fvc.lmm = model.tables(model.main.fvc.lmm), 
  model.interaction.fvc.lmm = model.tables(model.interaction.fvc.lmm),
  model.main.dlco.lmm = model.tables(model.main.dlco.lmm),
  model.interaction.dlco.lmm = model.tables(model.interaction.dlco.lmm),
  model.main.fev1.lmm = model.tables(model.main.fev1.lmm),
  model.interaction.fev1.lmm = model.tables(model.interaction.fev1.lmm)
)

saveRDS(object = DXA_models,
         file = here("Output","LMMlists","DXA_model.rds"))
saveRDS(object = lung_function_models,
        file = here("Output","LMMlists","lung_lmm_list.rds"))
```

# The End

```{r}
print("This is the end of OtherExploratoryOutcomes.qmd")
```
