---
title: "VO2max_data"
author: "Malte Lund Adamsen"
format: html
editor: visual
---

## Packages

```{r}
library(renv)
library(readxl)
library(dplyr)
library(here)
library(snakecase)
library(ggplot2)
library(car)
library(writexl)
library(LMMstar)
library(plotly)
library(stringr)
library(tidyr)
#install.packages("targets")
#library(targets)
#use_targets()
set.seed(42069)
#install.packages("multcomp")
library(multcomp)
library(renv)
#renv::status()
#renv::init()
library(butils)
#install.packages("patchwork")
library(patchwork)

mITT =T
PP=F

```

## Import data

```{r}
vo2max.data.full <- read_excel(path =  here("Data","vo2max.xlsx"))

PP_list <- read_excel(
    path=here("Output","Compliance.xlsx")
  )

vo2max.data.full<-
  vo2max.data.full|>
  left_join(PP_list)


#linear.mixed.model.df<-as.data.frame(do.call(rbind, linear.mixed.model.list))|>
#  tibble::rownames_to_column(var="model_outcome")|>
#  mutate(
#    model_number = str_extract(model_outcome, "\\d"),
#    model = str_split_fixed(model_outcome, pattern = fixed("."), n=4)[,1], #strsplit(model_outcome, split = ".", fixed = T),
#    model_name = str_split_fixed(model_outcome, pattern = fixed("."), n=4)[,2],
#    outcome = str_split_fixed(model_outcome, pattern = fixed("."), n=4)[,3], 
#    predictor = str_split_fixed(model_outcome, pattern = fixed("."), n=4)[,4] 
   # outcome = str_extract(model_outcome, "([a-z]+).")
#  )


```

## Constrain baseline

```{r}
vo2max.data.full<-
  vo2max.data.full%>%
  mutate(
  treat = case_when(
    timepoint == "baseline" ~ "control",
    timepoint == "screening" ~ "control",
    timepoint == "followup" ~ treatment,
    T~NA_character_
  ))%>%mutate(
    treat = factor(treat, levels = c("control", "exercise")),
    timepoint = factor(timepoint, levels = c("screening", "baseline", "followup"))
  )


```

Establish PP data.sets

```{r}
if(PP){
 vo2max.data<- 
   vo2max.data.full|>
   filter(PP)
} else {
 vo2max.data <- 
   vo2max.data.full
}
```

## Take a look at some histograms & summary statistics data

```{r}
vo2max.data%>%
  ggplot( aes(x=ifn_1_netto, 
              fill = treatment))+
  geom_histogram()

miss<-summarizeNA(vo2max.data)

plot(miss)

sss <- LMMstar::summarize(kondital+borg ~ timepoint:treatment, data = vo2max.data, na.rm = TRUE)

print(sss, digits = 2)



sss2 <- summarize(kondital+borg ~ treatment+timepoint|id, data = vo2max.data, na.rm = TRUE)
print(sss2, digits = 3) 

sss2 <- summarize(kondital ~ treatment+timepoint|id, data = vo2max.data, na.rm = TRUE)
print(sss2, digits = 3)

sss3 <- LMMstar::summarize(kondital+borg ~ timepoint:treatment, data = vo2max.data, na.rm = TRUE)

print(sss, digits = 2)

plot(sss2, type = "mean") ## left panel
plot(sss2)
plot(sss2, type = "sd") ## middle panel
plot(sss2, type = "cor") ## right panel
```

## Model after quality assessment

```{r}
data_vo2max_QC<-read_excel(
  path = here("Output","VO2maxQC","Data.VO2MAXQC.xlsx")
)

data_vo2max_QC<-
  data_vo2max_QC|>
  dplyr::select(id, timepoint, aerobiccapacity, aerobiccapacity_noted, QualityMeasurementCS, easytrialQualityTest, QualityMeasurementMLA, operator)

vo2_with_quality_controls<-
  vo2max.data|>
  left_join(data_vo2max_QC)|>
  mutate(timepoint = factor(timepoint, levels = c("screening", "baseline", "followup")))

vo2_with_quality_controls

vo2_with_quality_controls|>dplyr::filter(id == "lup_043")%>%relocate(kondital,timepoint,aerobiccapacity)
vo2_with_quality_controls|>dplyr::filter(id == "lup_032")%>%relocate(kondital,timepoint,aerobiccapacity)
vo2_with_quality_controls|>dplyr::filter(id == "lup_020")%>%relocate(kondital,timepoint,aerobiccapacity)
vo2_with_quality_controls|>dplyr::filter(id == "lup_015")%>%relocate(kondital,timepoint,aerobiccapacity)
vo2_with_quality_controls|>dplyr::filter(id == "lup_011")%>%relocate(kondital,timepoint,aerobiccapacity)
#IDs lup011, Lup015, Lup020, lup023, lup032 and lup043 have problem with my automatic detection of aerobic capacity at baseline. The original data for these is now missing, and we therefore use whatever the operator wrote down about them from the database, it seems a reasonable fit.
vo2_with_quality_controls|>
  ggplot(aes(x = aerobiccapacity, y=kondital, colour = treatment))+geom_point()

vo2_with_quality_controls2<-
  vo2_with_quality_controls|>
  mutate(aerobiccapacity = case_when(
    timepoint == "baseline" & id=="lup_043" ~ kondital,
    timepoint == "baseline" & id=="lup_015" ~ kondital,
    timepoint == "baseline" & id=="lup_020" ~ kondital,
    timepoint == "baseline" & id=="lup_011" ~ kondital,
    timepoint == "baseline" & id=="lup_023" ~ kondital,
    T~aerobiccapacity
  ))

vo2_with_quality_controls2|>dplyr::filter(id == "lup_043")%>%relocate(kondital,timepoint,aerobiccapacity)
vo2_with_quality_controls2|>dplyr::filter(id == "lup_032")%>%relocate(kondital,timepoint,aerobiccapacity)
vo2_with_quality_controls2|>dplyr::filter(id == "lup_020")%>%relocate(kondital,timepoint,aerobiccapacity)
vo2_with_quality_controls2|>dplyr::filter(id == "lup_015")%>%relocate(kondital,timepoint,aerobiccapacity)
vo2_with_quality_controls2|>dplyr::filter(id == "lup_011")%>%relocate(kondital,timepoint,aerobiccapacity)

summy <- summarize(easytrialQualityTest ~ treatment+timepoint|id, data = vo2_with_quality_controls, na.rm = TRUE)
print(summy, digits = 2)
### Manual quality control:


```

# Models on quality controlled data.

### Easytrial Assessment

```{r}
Easytrial_Vo2max <- 
  vo2_with_quality_controls2 |> 
  dplyr::filter(easytrialQualityTest)|>
  group_by(id) %>% 
    filter(!duplicated(timepoint))

Easytrial_Vo2max_no_screening<- #So both SÃ¸ren And Bente says that the screening measurements aren't usable, this is true, since the screening was done on patients just entering the door, and on baseline and followup it was done on patients after an OGTT and a meal.
  # I also conferred with Julie, since using the data with the screening is in the SAP thats the primary analysis, the other is ancillary and we'll interpret both.
Easytrial_Vo2max|>
  dplyr::filter(timepoint != "screening")|>
  mutate(timepoint = factor(timepoint, levels = c("baseline", "followup")) )

#-------------------------

#       Main Model

#-------------------------


model.main_after_QC_with_screen.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
)
summary(model.main_after_QC_with_screen.aerobic_capacity.lmm, level = 0.975)
anova(model.main_after_QC_with_screen.aerobic_capacity.lmm)
plot(model.main_after_QC_with_screen.aerobic_capacity.lmm, type = "scatterplot")
plot(model.main_after_QC_with_screen.aerobic_capacity.lmm, type = "qqplot")
#anova(model1.kondital.lmm)

#With interaction effect 
model.ifn1_interaction_after_QC_withscreen.aerobic_capacity.lmm<-lmm(
  formula = 
    aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
  )

summary(model.ifn1_interaction_after_QC_withscreen.aerobic_capacity.lmm, level = 0.975)

plot(model.ifn1_interaction_after_QC_withscreen.aerobic_capacity.lmm, type = "qqplot")
plot(model.ifn1_interaction_after_QC_withscreen.aerobic_capacity.lmm, type = "scatterplot")

#This is the interaction model on VO2max
model.ifn1_interaction_after_QC.vo2max.lmm<-lmm(
  formula = vo_2_max ~ 
   timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
  )

summary(model.ifn1_interaction_after_QC.vo2max.lmm)

  plot(model.ifn1_interaction_after_QC.vo2max.lmm, type = "qqplot")
plot(model.ifn1_interaction_after_QC.vo2max.lmm, type = "scatterplot")

model.main_after_QC.vo2max.lmm<-lmm(
  formula = vo_2_max ~ 
   timepoint+
    sex+
    timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
  )

summary(model.main_after_QC.vo2max.lmm)

plot(model.main_after_QC.vo2max.lmm, type = "qqplot")
plot(model.main_after_QC.vo2max.lmm, type = "scatterplot")

model.main_after_QC.aerobic_capacity_without_screen.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_no_screening
)
summary(model.main_after_QC.aerobic_capacity_without_screen.lmm, level = 0.975)
anova(model.main_after_QC.aerobic_capacity_without_screen.lmm)
plot(model.main_after_QC.aerobic_capacity_without_screen.lmm, type = "scatterplot")
plot(model.main_after_QC.aerobic_capacity_without_screen.lmm, type = "qqplot")


model.ifn1_interaction_after_QC.aerobiccapacity_No_screen.lmm<-lmm(
  formula = aerobiccapacity ~ 
   timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_no_screening
  )

summary(model.ifn1_interaction_after_QC.aerobiccapacity_No_screen.lmm)
plot(model.ifn1_interaction_after_QC.aerobiccapacity_No_screen.lmm, type = "qqplot")
plot(model.ifn1_interaction_after_QC.aerobiccapacity_No_screen.lmm, type = "scatterplot")

```

## Models before QC assessment

These models are done before quality assessment as can be seen below, so they can probably be disregarded. They are included for completeness.

```{r}
model1.main.aerobic_capacity.lmm<-lmm(
  formula = kondital ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data
)
summary(model1.main.aerobic_capacity.lmm, level = 0.975)
plot(model1.main.aerobic_capacity.lmm, type = "scatterplot")
plot(model1.main.aerobic_capacity.lmm, type = "qqplot")
#anova(model1.kondital.lmm)
effects(model1.main.aerobic_capacity.lmm, variable = NULL)

model.tables(model1.main.aerobic_capacity.lmm)

#TODO check model.tables funktionen til at hive summary scores ud af LMM-objekter.

model2.interaction_IFN.aerobic_capacity.lmm<-lmm(
  formula = kondital ~ 
    timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data
)

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model2.interaction_IFN.aerobic_capacity.lmm,level = 0.975)
plot(model2.interaction_IFN.aerobic_capacity.lmm, type = "scatterplot")
plot(model2.interaction_IFN.aerobic_capacity.lmm, type = "qqplot")
#anova(model2.kondital.lmm)
effects(model2.interaction_IFN.aerobic_capacity.lmm, variable = "treat")

model.interaction_m12.aerobic_capacity.lmm<-lmm(
  formula = kondital ~ timepoint+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data
)

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model.interaction_m12.aerobic_capacity.lmm,level = 0.975)
plot(model.interaction_m12.aerobic_capacity.lmm, type = "scatterplot")
plot(model.interaction_m12.aerobic_capacity.lmm, type = "qqplot")
#anova(model2.kondital.lmm)
effects(model.interaction_m12.aerobic_capacity.lmm, variable = "treat")


#effect of operator
#model2.kondital.operatorrandom.lmm<-lmm(
#  formula = kondital ~ timepoint+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex,
#  repetition = ~timepoint|id+operator|id,
#  structure = "UN",
#  data = vo2max.data
#)

#summary(model2.kondital.operatorrandom.lmm)
#plot(model2.kondital.operatorrandom.lmm, type = "scatterplot")
#plot(model2.kondital.operatorrandom.lmm, type = "qqplot")


#model3.no_outlier_m12_interaction.aerobic_capacity.lmm<-
#  lmm(
#  formula = kondital ~ timepoint+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex,
#  repetition = ~timepoint|id,
#  structure = "UN",
 # data = vo2max.data%>%
#  filter(m_1_2<11.6)
#)

#summary(model3.no_outlier_m12_interaction.aerobic_capacity.lmm)
#plot(model3.no_outlier_m12_interaction.aerobic_capacity.lmm, type = "scatterplot")
#plot(model3.no_outlier_m12_interaction.aerobic_capacity.lmm, type = "qqplot")
#anova(model2.kondital.lmm)


#
```

### Other exploratory Models

```{r}
model4.sex_ifn_1_netto_interaction.aerobic_capacity.lmm<-lmm(
formula = kondital ~ 
  timepoint+
  treat+
  treat:timepoint:sex+ 
  ifn_1_netto+
  ifn_1_netto:timepoint+
  treat:timepoint:ifn_1_netto:sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data
)

summary(model4.sex_ifn_1_netto_interaction.aerobic_capacity.lmm)
plot(model4.sex_ifn_1_netto_interaction.aerobic_capacity.lmm, type = "scatterplot")
plot(model4.sex_ifn_1_netto_interaction.aerobic_capacity.lmm, type = "qqplot")

model5.el_sherbiny_interaction.aerobic_capacity.lmm<-lmm(
  formula = kondital ~ timepoint+treat+treat:timepoint+ ifn_1_el_sherb+treat:timepoint:ifn_1_el_sherb+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data
)

summary(model5.el_sherbiny_interaction.aerobic_capacity.lmm)
plot(model5.el_sherbiny_interaction.aerobic_capacity.lmm, type = "scatterplot")
plot(model5.el_sherbiny_interaction.aerobic_capacity.lmm, type = "qqplot")


model6.m_1_2_geomean_interaction.aerobic_capacity.lmm<-lmm(
  formula = kondital ~ timepoint+treat+treat:timepoint+ m_1_2_geomean+treat:timepoint:m_1_2_geomean+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data
)

summary(model6.m_1_2_geomean_interaction.aerobic_capacity.lmm)
plot(model6.m_1_2_geomean_interaction.aerobic_capacity.lmm, type = "scatterplot")
plot(model6.m_1_2_geomean_interaction.aerobic_capacity.lmm, type = "qqplot")
#log_geomean ?? 
vo2max.data<- vo2max.data|>mutate(
  log_m_1_2_geomean = log(m_1_2_geomean)
)
model7.log_m_1_2_geomean_interaction.aerobic_capacity.lmm<-lmm(
  formula = kondital ~ timepoint+treat+treat:timepoint+ log_m_1_2_geomean+treat:timepoint:log_m_1_2_geomean+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data
)

summary(model7.log_m_1_2_geomean_interaction.aerobic_capacity.lmm)
plot(model7.log_m_1_2_geomean_interaction.aerobic_capacity.lmm, type = "scatterplot")
plot(model7.log_m_1_2_geomean_interaction.aerobic_capacity.lmm, type = "qqplot")

model8.main_vo2max_nointeraction.vo2max.lmm<-lmm(
  formula = vo_2_max ~ timepoint+treat+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data
)
summary(model8.main_vo2max_nointeraction.vo2max.lmm)
plot(model8.main_vo2max_nointeraction.vo2max.lmm, type = "scatterplot")
plot(model8.main_vo2max_nointeraction.vo2max.lmm, type = "qqplot")



model9.interaction_ifn_1_vo2max.vo2max.lmm<-lmm(
  formula = vo_2_max ~ 
    timepoint+
    treat+
    treat:timepoint+ 
    ifn_1_netto+
    timepoint:ifn_1_netto+
    treat:timepoint:ifn_1_netto+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data
)

summary(model9.interaction_ifn_1_vo2max.vo2max.lmm)
plot(model9.interaction_ifn_1_vo2max.vo2max.lmm, type = "scatterplot")
plot(model9.interaction_ifn_1_vo2max.vo2max.lmm, type = "qqplot")

#library(lme4)
#lmmodel1 <- lmer(
#  kondital ~ timepoint+treat+treat:timepoint+sex + (1|id),
#                 data=vo2max.data, 
#  REML=T)
#summary(lmmodel1)
#plot(lmmodel1)
#Anova(lmmodel1, type=3)

#lmmodel2 <- lmer(
#  kondital ~ timepoint+treat:timepoint+ m_1_2+treat:timepoint:m_1_2+sex + (1|id),
#                 data=vo2max.data, 
#  REML=T)
#plot(lmmodel2)
#summary(lmmodel2)
#Anova(lmmodel2, type =3)
```

##Exploratory Analysis of VO2max on quality controlled data

```{r}
#---------------------------

#           Ancillary Analysis

#---------------------------
model.main_vo2max_nointeraction_easytrialQC.vo2max.lmm<-
  lmm(
  formula = vo_2_max ~ timepoint+treat+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_no_screening
)
summary(model.main_vo2max_nointeraction_easytrialQC.vo2max.lmm)
plot(model.main_vo2max_nointeraction_easytrialQC.vo2max.lmm, type = "scatterplot")
plot(model.main_vo2max_nointeraction_easytrialQC.vo2max.lmm, type = "qqplot")
plot(model.main_vo2max_nointeraction_easytrialQC.vo2max.lmm, type = "fit", color = "treatment")
model.tables(model.main_vo2max_nointeraction_easytrialQC.vo2max.lmm)


model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm<-lmm(
  formula = vo_2_max ~ 
    timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_no_screening
)

summary(model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm)
plot(model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm, type = "scatterplot")
plot(model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm, type = "qqplot")
model.tables(model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm)

model.interaction_IFN_vo2max_easytrialQC_with_screening.vo2max.lmm<-lmm(
  formula = vo_2_max ~ 
    timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
)

summary(model.interaction_IFN_vo2max_easytrialQC_with_screening.vo2max.lmm)
plot(model.interaction_IFN_vo2max_easytrialQC_with_screening.vo2max.lmm, type = "scatterplot")
plot(model.interaction_IFN_vo2max_easytrialQC_with_screening.vo2max.lmm, type = "qqplot")
model.tables(model.interaction_IFN_vo2max_easytrialQC_with_screening.vo2max.lmm)

Easytrial_Vo2max<-
  Easytrial_Vo2max|>
  mutate(OGTT = factor(case_when(
    timepoint == "screening" ~ "No OGTT",
    timepoint == "baseline" ~ "OGTT",
    timepoint == "followup" ~ "OGTT",
    T~NA_character_
  ), levels = c("No OGTT","OGTT" )))


```

## Ancillary analyses

```{r}
model.main_after_QC.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_no_screening
)
summary(model.main_after_QC.aerobic_capacity.lmm, level = 0.95)
anova(model.main_after_QC.aerobic_capacity.lmm)
plot(model.main_after_QC.aerobic_capacity.lmm, type = "scatterplot")
plot(model.main_after_QC.aerobic_capacity.lmm, type = "qqplot")
#anova(model1.kondital.lmm)

model.ifn1_interaction_after_QC.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ 
   timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_no_screening
  )

summary(model.ifn1_interaction_after_QC.aerobic_capacity.lmm, level = 0.975)

plot(model.ifn1_interaction_after_QC.aerobic_capacity.lmm, type = "qqplot")
plot(model.ifn1_interaction_after_QC.aerobic_capacity.lmm, type = "scatterplot")

#-----



model10.main_after_QC.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
)
summary(model10.main_after_QC.aerobic_capacity.lmm, level = 0.975)
anova(model10.main_after_QC.aerobic_capacity.lmm)
plot(model10.main_after_QC.aerobic_capacity.lmm, type = "scatterplot")
plot(model10.main_after_QC.aerobic_capacity.lmm, type = "qqplot")
#anova(model1.kondital.lmm)

model.tables(model10.main_after_QC.aerobic_capacity.lmm, level =0.975)

#linear.mixed.model.list$model10.main_after_QC.aerobic_capacity.lmm<-
 # model.tables(model10.main_after_QC.aerobic_capacity.lmm, level =0.975)

#TODO check model.tables funktionen til at hive summary scores ud af LMM-objekter.

Easytrial_Vo2max<-
  Easytrial_Vo2max|>
  mutate(
    treat2 = factor(case_when(
                      timepoint == "baseline" ~ "nothing",
                        timepoint == "screening" ~ "nothing",
                        T ~ treat), levels = c("nothing", "control","exercise"))
  )

model11.all_ifn_interaction_after_QC.aerobic_capacity.lmm<-lmm(
  formula = 
    aerobiccapacity ~ 
    sex+
    timepoint+
    timepoint:treat+ 
    ifn_1_netto+
    timepoint:ifn_1_netto+
    ifn_1_netto:treat:timepoint,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
  )

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model11.all_ifn_interaction_after_QC.aerobic_capacity.lmm, level =0.975)

anova(model11.all_ifn_interaction_after_QC.aerobic_capacity.lmm)
plot(model11.all_ifn_interaction_after_QC.aerobic_capacity.lmm, type = "scatterplot")
plot(model11.all_ifn_interaction_after_QC.aerobic_capacity.lmm, type = "qqplot")

model11.all_ifn_interaction_after_QC.aerobic_capacity_differenceTreat.lmm<-lmm(
  formula = 
    aerobiccapacity ~ 
    sex+
    timepoint+
    timepoint:treat2+ 
    ifn_1_netto+
    timepoint:ifn_1_netto+
    ifn_1_netto:treat2:timepoint,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
  )

summary(model11.all_ifn_interaction_after_QC.aerobic_capacity_differenceTreat.lmm)
#Cont_vec_vo2 <-
#  rbind(
#    c( #At Screening
#      1, #(Intercept)
#      0, #timepointbaseline
#      0, #timepointfollowup	
#      1, #m_1_2	
#      1, #sexM	
#      0, #timepointfollowup:treatexercise
#      0, #timepointbaseline:m_1_2:treatcontrol
#      0, #timepointfollowup:treatcontrol:m_1_2	
#      0  #timepointfollowup:treatexercise:m_1_2
#    ),
#    c( #At Baseline
#      1, #(Intercept)
#      1, #timepointbaseline
#      0, #timepointfollowup	
#      1, #m_1_2	
#      1, #sexM	
#      0, #timepointfollowup:treatexercise
#      1, #timepointbaseline:m_1_2:treatcontrol
#      0, #timepointfollowup:treatcontrol:m_1_2	
#      0  #timepointfollowup:treatexercise:m_1_2
#    ),
#    c(   #Control at FU
#      1, #(Intercept)
#      0, #timepointbaseline
#      1, #timepointfollowup	
#      1, #m_1_2	
#      1, #sexM	
#      0, #timepointfollowup:treatexercise
#      0, #timepointbaseline:m_1_2:treatcontrol
#      1, #timepointfollowup:treatcontrol:m_1_2	
#      0  #timepointfollowup:treatexercise:m_1_2
#    ),
#    c(   #Exercise at FU
#      1, #(Intercept)
#      0, #timepointbaseline
#      1, #timepointfollowup	
#      1, #m_1_2	
#      1, #sexM	
#      1, #timepointfollowup:treatexercise
#      0, #timepointbaseline:m_1_2:treatcontrol
#      0, #timepointfollowup:treatcontrol:m_1_2	
#      1  #timepointfollowup:treatexercise:m_1_2
#    ),
#    c(   #Exercise at FU minus Control at FU
#      1-1, #(Intercept)
#      0-0, #timepointbaseline
#      1-1, #timepointfollowup	
#      1-1, #m_1_2	
#      1-1, #sexM	
#      1-0, #timepointfollowup:treatexercise
#      0-0, #timepointbaseline:m_1_2:treatcontrol
#      0-1, #timepointfollowup:treatcontrol:m_1_2	
#      1-0  #timepointfollowup:treatexercise:m_1_2
#    ),
#    c(   #Difference of M_1_2 interaction
#      0, #(Intercept)
#      0, #timepointbaseline
#      0, #timepointfollowup	
#      0, #m_1_2	
#      0, #sexM	
#      0, #timepointfollowup:treatexercise
#      0, #timepointbaseline:m_1_2:treatcontrol
#      -1, #timepointfollowup:treatcontrol:m_1_2	
#      1  #timepointfollowup:treatexercise:m_1_2
#    ))
	
#rownames(Cont_vec_vo2) <- c("Baseline","Control_FU","Exercise_FU", "Exercise_FU minus Control_FU", "Difference in M_1_2 interaction #exercise minus control")
#summary(glht(model11.m_1_2_interaction_after_QC.aerobic_capacity.lmm, linfct=Cont_vec_vo2), test=adjusted("none"))
#confint(glht(model11.m_1_2_interaction_after_QC.aerobic_capacity.lmm, linfct=Cont_vec_vo2), test=adjusted("none"), level = 0.975)

#anova(model2.kondital.lmm)

model11.all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treat+
    all_ifn+
    all_ifn:timepoint+
    all_ifn:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
  )
#THIS IS THE MODEL SPECIFIED TO BE DONE IN THE SAP

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model11.all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, level =0.975)
model.tables(model11.all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm)
anova(model11.all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm)
plot(model11.all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, type = "scatterplot")
plot(model11.all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, type = "qqplot")

model.all_ifn_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treat+
    all_ifn_netto_t_test+
    all_ifn_netto_t_test:timepoint+
    all_ifn_netto_t_test:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
  )
#THIS IS THE MODEL SPECIFIED TO BE DONE IN THE SAP

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model.all_ifn_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, level =0.975)
model.tables(model.all_ifn_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm)
anova(model.all_ifn_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm)
plot(model.all_ifn_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, type = "scatterplot")
plot(model.all_ifn_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, type = "qqplot")

model.ifn_1_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
  )
#THIS IS THE MODEL SPECIFIED TO BE DONE IN THE SAP

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model.ifn_1_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, level =0.975)
model.tables(model.ifn_1_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm)
anova(model.ifn_1_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm)
plot(model.ifn_1_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, type = "scatterplot")
plot(model.ifn_1_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, type = "qqplot")

model.soren_all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treat+
    from_soren+
    from_soren:timepoint+
    from_soren:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
  )
#THIS IS THE MODEL SPECIFIED TO BE DONE IN THE SAP

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model.soren_all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, level =0.975)
model.tables(model.soren_all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm)
anova(model.soren_all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm)
plot(model.soren_all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, type = "scatterplot")
plot(model.soren_all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, type = "qqplot")
```

#### Exploratory Models on The Easytrial QC data

```{r}
model.main_vo2max_nointeraction_easytrialQC.vo2max.lmm<-
  lmm(
  formula = vo_2_max ~ timepoint+treat+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
)
summary(model.main_vo2max_nointeraction_easytrialQC.vo2max.lmm)
plot(model.main_vo2max_nointeraction_easytrialQC.vo2max.lmm, type = "scatterplot")
plot(model.main_vo2max_nointeraction_easytrialQC.vo2max.lmm, type = "qqplot")
plot(model.main_vo2max_nointeraction_easytrialQC.vo2max.lmm, type = "fit", color = "treatment")
model.tables(model.main_vo2max_nointeraction_easytrialQC.vo2max.lmm)


model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm<-lmm(
  formula = vo_2_max ~ 
    timepoint+
    sex+
    timepoint:treat+
    all_ifn+
    all_ifn:timepoint+
    all_ifn:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
)

summary(model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm)
plot(model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm, type = "scatterplot")
plot(model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm, type = "qqplot")
model.tables(model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm)


model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm|>
  plot(type = "fit", color = "treatment", obs.alpha = 0.5, ci = F,
     time.var = "timepoint", facet = ~ sex+ cut_interval(all_ifn, 3) , )

model9.interaction_IFN_vo2max_nosex_easytrialQC.vo2max.lmm<-lmm(
  formula = vo_2_max ~ 
    timepoint+
    timepoint:treat+
    all_ifn+
    all_ifn:timepoint+
    all_ifn:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
)

summary(model9.interaction_IFN_vo2max_nosex_easytrialQC.vo2max.lmm)
plot(model9.interaction_IFN_vo2max_nosex_easytrialQC.vo2max.lmm, type = "scatterplot")
plot(model9.interaction_IFN_vo2max_nosex_easytrialQC.vo2max.lmm, type = "qqplot")

model9.interaction_IFN_vo2max_nosex_easytrialQC.vo2max.lmm|>
  plot(type = "fit", color = "treatment", obs.alpha = 0.5, ci = F,
     time.var = "timepoint", facet = ~ cut_interval(all_ifn, 3))

model17.IFN_interaction_after_QC.onlyBaselineFU.aerobic_capacity_diff_at_followup.lmm<-lmm(
  formula = 
    aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treat+
    all_ifn+
    all_ifn:timepoint+
    all_ifn:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max|>
    dplyr::filter(timepoint!="screening")
  )

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model17.IFN_interaction_after_QC.onlyBaselineFU.aerobic_capacity_diff_at_followup.lmm, level =0.975)
anova(model17.IFN_interaction_after_QC.onlyBaselineFU.aerobic_capacity_diff_at_followup.lmm)
plot(model17.IFN_interaction_after_QC.onlyBaselineFU.aerobic_capacity_diff_at_followup.lmm, type = "scatterplot")
plot(model17.IFN_interaction_after_QC.onlyBaselineFU.aerobic_capacity_diff_at_followup.lmm, type = "qqplot")
#--------------------------------

#           IFN El Sherbiny

#-------------------------------

model.ifn_elsherb_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treat+
    ifn_1_el_sherb+
    ifn_1_el_sherb:timepoint+
    ifn_1_el_sherb:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
  )

summary(model.ifn_elsherb_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, level =0.975)
anova(model.ifn_elsherb_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm)
plot(model.ifn_elsherb_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, type = "scatterplot")
plot(model.ifn_elsherb_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, type = "qqplot")


```

#### With no constrain on baseline IFN and treatment

So the findings are done with keeping IFN to the same value it was at baseline, to see the effect of IFN-1 signalling at baseline on the outcome.

What if we allow it to change in the model and use our follow-up observations?

```{r}
cytokine_scores <- read_excel(path=here("output","cytokinescores.xlsx"))

cytokine_scores_BL_FU <-
  cytokine_scores |>
  dplyr::filter(timepoint == "Baseline" | timepoint == "Followup")|>
  mutate(
    timepoint = to_snake_case(timepoint)
  )

Easytrial_Vo2Max_Varying_IFN_score <-
  Easytrial_Vo2max |>
  dplyr::select(id, treatment, treat, timepoint,
                sex, vo_2_max, aerobiccapacity)|>
  left_join(cytokine_scores_BL_FU, by = join_by( id, timepoint))

Easytrial_Vo2Max_Varying_IFN_score_no_screening <-
  Easytrial_Vo2Max_Varying_IFN_score |>
  dplyr::filter(
    timepoint != "screening")|>
  mutate(
    timepoint = factor(timepoint, level = c("baseline", "followup"))
  )
model.all_ifn_interaction_varyingIFN_no_screen.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2Max_Varying_IFN_score_no_screening
  )

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model.all_ifn_interaction_varyingIFN_no_screen.lmm, level =0.975)
anova(model.all_ifn_interaction_varyingIFN_no_screen.lmm)
plot(model.all_ifn_interaction_varyingIFN_no_screen.lmm, type = "scatterplot")
plot(model.all_ifn_interaction_varyingIFN_no_screen.lmm, type = "qqplot")

model.all_ifn_interaction_varyingIFN_with_Screen.lmm<-lmm(
   formula = aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2Max_Varying_IFN_score
  )

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model.all_ifn_interaction_varyingIFN_with_Screen.lmm, level =0.975)
anova(model.all_ifn_interaction_varyingIFN_with_Screen.lmm)
plot(model.all_ifn_interaction_varyingIFN_with_Screen.lmm, type = "scatterplot")
plot(model.all_ifn_interaction_varyingIFN_with_Screen.lmm, type = "qqplot")

model.all_ifn_interaction_varyingIFN_noBLConstrain.lmm<-lmm(
   formula = aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treatment+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treatment,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2Max_Varying_IFN_score
  )

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model.all_ifn_interaction_varyingIFN_noBLConstrain.lmm, level =0.975)
anova(model.all_ifn_interaction_varyingIFN_noBLConstrain.lmm)
plot(model.all_ifn_interaction_varyingIFN_noBLConstrain.lmm, type = "scatterplot")
plot(model.all_ifn_interaction_varyingIFN_noBLConstrain.lmm, type = "qqplot")

#missing value on FU all_ifn
miss_FU<-
  Easytrial_Vo2Max_Varying_IFN_score|>
    mutate(ifn_1_netto = case_when(
      timepoint == "followup" ~ NA_real_,
      T~ifn_1_netto
    ))

#model.all_ifn_interaction_missIFNFU.lmm<-lmm(
#  formula = aerobiccapacity ~ 
#    timepoint+
#    sex+
#    timepoint:treat+
#    all_ifn+
#    all_ifn:timepoint+
#    all_ifn:timepoint:treat,
#  repetition = ~timepoint|id,
#  structure = "UN",
#  data = miss_FU
#  )
## Doesn't compile
#summary(model.all_ifn_interaction_varyingIFN.lmm, level =0.975)
#anova(model.all_ifn_interaction_varyingIFN.lmm)
#plot(model.all_ifn_interaction_varyingIFN.lmm, type = "scatterplot")
#plot(model.all_ifn_interaction_varyingIFN.lmm, type = "qqplot")
```

This in general finds the same thing as the main analyses, but less clearly.

### MLA Assessment

My own assessment of a quality VO2max test requires us to find a plateau by having a significantly lower slope from 30 seconds before VO2max to 30 seconds after VO2max than the slope of the "steady work". The method is probably not that strong in this cohort, because some of them can only sustain VO2max for 20-25 seconds. Which is enough to visually inspect a plateau, but not enough to get the significant reduction i slope

```{r}
MLA_Vo2max <- vo2_with_quality_controls |> dplyr::filter(
  QualityMeasurementMLA)|>
  group_by(id) %>% 
    filter(!duplicated(timepoint))

model12.main_after_QC_MLA_version.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = MLA_Vo2max
)
summary(model12.main_after_QC_MLA_version.aerobic_capacity.lmm, level =0.975)
plot(model12.main_after_QC_MLA_version.aerobic_capacity.lmm, type = "scatterplot")
plot(model12.main_after_QC_MLA_version.aerobic_capacity.lmm, type = "qqplot")
#anova(model1.kondital.lmm)

model.tables(model12.main_after_QC_MLA_version.aerobic_capacity.lmm, level = 0.975)

#linear.mixed.model.list$model12.main_after_QC_MLA_version.aerobic_capacity.lmm<-
 # model.tables(model12.main_after_QC_MLA_version.aerobic_capacity.lmm, level = 0.975)

#TODO check model.tables funktionen til at hive summary scores ud af LMM-objekter.

model13.m_1_2_interaction_after_QC_MLA.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = MLA_Vo2max
)

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model13.m_1_2_interaction_after_QC_MLA.aerobic_capacity.lmm, level = 0.975)
plot(model13.m_1_2_interaction_after_QC_MLA.aerobic_capacity.lmm, type = "scatterplot")
plot(model13.m_1_2_interaction_after_QC_MLA.aerobic_capacity.lmm, type = "qqplot")
#anova(model2.kondital.lmm)


#linear.mixed.model.list$model13.m_1_2_interaction_after_QC_MLA.aerobic_capacity.lmm <- 
 # model.tables(model13.m_1_2_interaction_after_QC_MLA.aerobic_capacity.lmm, level = 0.975)
```

### CS Assessment

Caspers method checks whether the estimated slope for the last 30 seconds of the test is half or less than the estimated slope for the stable work. It is more robust than my method, but it still lacks the granularity of visual inspection.

```{r}

CS_Vo2max <- vo2_with_quality_controls |> dplyr::filter(
  QualityMeasurementCS
)|>
  group_by(id) %>% 
    filter(!duplicated(timepoint))

model14.main_after_QC_CS_version.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = CS_Vo2max
)
summary(model14.main_after_QC_CS_version.aerobic_capacity.lmm)
plot(model14.main_after_QC_CS_version.aerobic_capacity.lmm, type = "scatterplot")
plot(model14.main_after_QC_CS_version.aerobic_capacity.lmm, type = "qqplot")
#anova(model1.kondital.lmm)

#TODO check model.tables funktionen til at hive summary scores ud af LMM-objekter.

model15.ifn1_interaction_after_QC_CS.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = CS_Vo2max
)

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model15.ifn1_interaction_after_QC_CS.aerobic_capacity.lmm, level = 0.975)
plot(model15.ifn1_interaction_after_QC_CS.aerobic_capacity.lmm, type = "scatterplot")
plot(model15.ifn1_interaction_after_QC_CS.aerobic_capacity.lmm, type = "qqplot")
#anova(model2.kondital.lmm)

```

### Pooles Assessment

Pooles method inspects whether the slope is less than half from minute 6 (1 minute after warmup), until 2 minutes before test end. And whether VO2max lies in the test end.

```{r}
##Controlled by Pooles method
data_vo2max_QC_poole<-read_excel(
  path = here("Output","VO2maxQC","Data.VO2MAXQC_poole.xlsx"))|>
  dplyr::select(id, timepoint, aerobiccapacity, aerobiccapacity_noted, QualityMeasurementCS)

vo2_with_Poole_quality_controls<-vo2max.data|>left_join(data_vo2max_QC_poole)

Poole_Vo2max <- vo2_with_Poole_quality_controls |> dplyr::filter(
  QualityMeasurementCS
)|>
  group_by(id) %>% 
    filter(!duplicated(timepoint))

model16.main_after_QC_Pooles_version.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Poole_Vo2max
)
summary(model16.main_after_QC_Pooles_version.aerobic_capacity.lmm, level = 0.975)
plot(model16.main_after_QC_Pooles_version.aerobic_capacity.lmm, type = "scatterplot")
plot(model16.main_after_QC_Pooles_version.aerobic_capacity.lmm, type = "qqplot")
#anova(model1.kondital.lmm)

model.tables(model16.main_after_QC_Pooles_version.aerobic_capacity.lmm, level =0.975)


#TODO check model.tables funktionen til at hive summary scores ud af LMM-objekter.

model17.ifn1_interaction_after_QC_Poole.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    sex+
    timepoint:treat+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    ifn_1_netto:timepoint:treat,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Poole_Vo2max
)

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model17.ifn1_interaction_after_QC_Poole.aerobic_capacity.lmm, level =0.975)
plot(model17.ifn1_interaction_after_QC_Poole.aerobic_capacity.lmm, type = "scatterplot")
plot(model17.ifn1_interaction_after_QC_Poole.aerobic_capacity.lmm, type = "qqplot")
#anova(model2.kondital.lmm)

effects(model17.ifn1_interaction_after_QC_Poole.aerobic_capacity.lmm, variable = NULL)


```

All in all, quality assessment does not seem to change the findings a lot.

## Dataset for Quantile and Elevated interaction

```{r}

elevated_median.ifn1.easytrialvo2max<-
  Easytrial_Vo2max|>
  dplyr::filter(timepoint =="baseline")|>
  dplyr::filter(ifn_1_netto >=2)|>
  pull(ifn_1_netto)|>
  median(na.rm = T)

quant.ifn1.easytrialvo2max<-
  Easytrial_Vo2max|>
  filter( timepoint =="baseline")|>
  pull(ifn_1_netto)|>
  quantile(probs=c(0.33, .67), na.rm=T)
  

Easytrial_Vo2max<-
  Easytrial_Vo2max%>% 
  mutate(  
    ifn1_quantile_at_baseline = 
             case_when(is.na(ifn_1_netto)~ NA_character_,
                       T ~ factor(
                         findInterval(ifn_1_netto, c(-Inf, quant.ifn1.easytrialvo2max, Inf)))),
    ifn1_quantile_at_baseline = 
             factor(ifn1_quantile_at_baseline, 
                    levels = 1:3, 
                    labels = c("lowest 33%", "middle 33-67%", "highest 33%")),
    treat_constrain_at_base = case_when(
             timepoint == "screening" ~ "control",
             T ~ treatment),
    ifn1_elevated_at_baseline = 
             case_when(is.na(ifn_1_netto)~ NA_character_,
                       T ~ factor(
                         findInterval(ifn_1_netto, c(-Inf, 2, elevated_median.ifn1.easytrialvo2max, Inf)))),
    ifn1_elevated_at_baseline = 
            factor(ifn1_elevated_at_baseline, 
                  levels = 1:3, 
                    labels = c("Normal", "Slightly Elevated", "Highly elevated"))
          )
 
```

## Model on Quantile Interaction, 
because it makes it easier to do graphics for the pretty plot
```{r}
model18.ifn1_quantile_interaction.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    treat:timepoint+ 
    ifn1_quantile_at_baseline+
    timepoint:ifn1_quantile_at_baseline+
    treat:timepoint:ifn1_quantile_at_baseline+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
    
)

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model18.ifn1_quantile_interaction.aerobic_capacity.lmm, level = 0.975)
plot(model18.ifn1_quantile_interaction.aerobic_capacity.lmm, type = "scatterplot")
plot(model18.ifn1_quantile_interaction.aerobic_capacity.lmm, type = "qqplot")
#anova(model2.kondital.lmm)

effects(model18.ifn1_quantile_interaction.aerobic_capacity.lmm, variable = c("treat"))

plot(model18.ifn1_quantile_interaction.aerobic_capacity.lmm, type = "fit")

model18_plot<-
  plot(model18.ifn1_quantile_interaction.aerobic_capacity.lmm, type = "fit", 
     obs.alpha = 0.2, 
     ci = F, 
     #ci.alpha = 0.1,
     size.text = 12, 
     colo="treat_constrain_at_base", 
     facet = ~ifn1_quantile_at_baseline,
     at = data.frame(sex = "F"))

effectsmodel3.IFNquants<-effects(model18.ifn1_quantile_interaction.aerobic_capacity.lmm, 
        variable = "treat", 
        conditional = c("timepoint", "ifn1_quantile_at_baseline"))

df.confint<-confint(model18.ifn1_quantile_interaction.aerobic_capacity.lmm)

#Easytrial_Vo2max |>
#  ggplot(aes(x=timepoint, y=kondital, colour = treat, group = treat))+
#  stat_function(fun = model18.ifn1_quantile_interaction.aerobic_capacity.lmm)


model18prettyplot<-
  model18_plot$plot + 
  labs(
    x = "Timepoint",
    color = "Treatment",
    y = "Aerobic Capacity (ml O2/kg/min)",
    title = "Aerobic Capacity by",
    subtitle = "IFN-1 Score Tertile"
  )+
  theme(plot.subtitle = element_text(hjust = 0.5))+
  theme_bw()+
  scale_colour_discrete(name="Treatment",
                         breaks=c("control", "exercise"),
                         labels=c("Control", "Exercise"))

ggsave(
  filename=
    here("output","graphics", 
         "Aerobic_Capacity_PrettyPlot_IFN_quartiles_Effect.jpg"),
  plot=model18prettyplot,
  width = 12)

saveRDS(model18_plot,
        file = here("output", "graphics", "asRDS", "Aerobic_Capacity_IFN_quartiles_Effect_plot.rds"))

model.ifn1_quantile_interaction.aerobic_capacity_no_sex.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    treat:timepoint+ 
    ifn1_quantile_at_baseline+
    timepoint:ifn1_quantile_at_baseline+
    treat:timepoint:ifn1_quantile_at_baseline,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
    
)

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model.ifn1_quantile_interaction.aerobic_capacity_no_sex.lmm, level = 0.975)
plot(model.ifn1_quantile_interaction.aerobic_capacity_no_sex.lmm, type = "scatterplot")
plot(model.ifn1_quantile_interaction.aerobic_capacity_no_sex.lmm, type = "qqplot")
#anova(model2.kondital.lmm)

model_plot<-plot(model.ifn1_quantile_interaction.aerobic_capacity_no_sex.lmm, type = "fit", 
     obs.alpha = 0.2, 
     ci = FALSE, 
     size.text = 12, 
     colo="treat_constrain_at_base", 
     facet = ~ifn1_quantile_at_baseline)

```
## Model on IFN-1 Elevation 
because it makes it easier to do graphics for

```{r}
model19.ifn1_elevation_interaction.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    treat:timepoint+ 
    ifn1_elevated_at_baseline+
    timepoint:ifn1_elevated_at_baseline+
    treat:timepoint:ifn1_elevated_at_baseline+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
    
)

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model19.ifn1_elevation_interaction.aerobic_capacity.lmm, level = 0.975)
plot(model19.ifn1_elevation_interaction.aerobic_capacity.lmm, type = "scatterplot")
plot(model19.ifn1_elevation_interaction.aerobic_capacity.lmm, type = "qqplot")
#anova(model2.kondital.lmm)

effects(model19.ifn1_elevation_interaction.aerobic_capacity.lmm, variable = c("treat"))

plot(model19.ifn1_elevation_interaction.aerobic_capacity.lmm, type = "fit")

model19_plot<-
  plot(model19.ifn1_elevation_interaction.aerobic_capacity.lmm, type = "fit", 
     obs.alpha = 0.2, 
     ci = F, 
     #ci.alpha = 0.1,
     size.text = 12, 
     colo="treat_constrain_at_base", 
     facet = ~ifn1_elevated_at_baseline,
     at = data.frame(sex = "F"))

effectsmodel3.IFNelecated<-effects(model19.ifn1_elevation_interaction.aerobic_capacity.lmm, 
        variable = "treat", 
        conditional = c("timepoint", "ifn1_elevated_at_baseline"))

df.confint<-confint(model19.ifn1_elevation_interaction.aerobic_capacity.lmm)

#Easytrial_Vo2max |>
#  ggplot(aes(x=timepoint, y=kondital, colour = treat, group = treat))+
#  stat_function(fun = model19.ifn1_elevation_interaction.aerobic_capacity.lmm)


model19prettyplot<-
  model19_plot$plot + 
  labs(
    x = "Timepoint",
    color = "Treatment",
    y = "Aerobic Capacity (ml O2/kg/min)",
    title = "Aerobic Capacity by",
    subtitle = "IFN-1 Score Elevation"
  )+
  theme(plot.subtitle = element_text(hjust = 0.5))+
  theme_bw()+
  scale_colour_discrete(name="Treatment",
                         breaks=c("control", "exercise"),
                         labels=c("Control", "Exercise"))

ggsave(
  filename=
    here("output","graphics", 
         "Aerobic_Capacity_PrettyPlot_IFN_elevation_Effect.jpg"),
  plot=model19prettyplot,
  width = 12)

saveRDS(model19_plot,
        file = here("output", "graphics", "asRDS", "Aerobic_Capacity_IFN_elevation_Effect_plot.rds"))


```
## Model on just baseline and followup because screening is statistically different from baseline

We have moved this method to the main analysis because of suggestions from SÃ¸ren and Bente.

```{r eval = F}
vo2max.data.no.screen <- vo2max.data %>% dplyr::filter(timepoint != "screening")

model19.main_no_screening.aerobic_capacity.lmm<-lmm(
  formula = kondital ~ timepoint+treat+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data.no.screen
)
summary(model19.main_no_screening.aerobic_capacity.lmm, level = 0.975)
plot(model19.main_no_screening.aerobic_capacity.lmm, type = "scatterplot")
plot(model19.main_no_screening.aerobic_capacity.lmm, type = "qqplot")
plot(model19.main_no_screening.aerobic_capacity.lmm, type = "fit")

model20.m_1_2_interaction_no_screening.aerobic_capacity.lmm<-lmm(
  formula = kondital ~ timepoint+treat:timepoint+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    treat:timepoint:ifn_1_netto+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data.no.screen
)
summary(model20.m_1_2_interaction_no_screening.aerobic_capacity.lmm, level = 0.975)
anova(model20.m_1_2_interaction_no_screening.aerobic_capacity.lmm)
plot(model20.m_1_2_interaction_no_screening.aerobic_capacity.lmm, type = "scatterplot")
plot(model20.m_1_2_interaction_no_screening.aerobic_capacity.lmm, type = "qqplot")


```

## SÃ¸ren J asks, since this is a z-score is the effect only on those with a z-score higher than 2.

So we'll make that analysis as an exploratory measure, but we are throwing out a lot of data.

```{r}
vo2max.data.high.IFN <- 
  vo2max.data %>% 
  filter(ifn_1_netto>2)

model21.main_no_normal_IFN1.aerobic_capacity.lmm<-lmm(
  formula = kondital ~ timepoint+treat+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data.high.IFN
)
summary(model21.main_no_normal_IFN1.aerobic_capacity.lmm, level = 0.975)
plot(model21.main_no_normal_IFN1.aerobic_capacity.lmm, type = "scatterplot")
plot(model21.main_no_normal_IFN1.aerobic_capacity.lmm, type = "qqplot")


model22.interaction_IFN1_no_normal_IFN1.aerobic_capacity.lmm<-lmm(
  formula = kondital ~ 
    timepoint+
    treat:timepoint+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    treat:timepoint:ifn_1_netto+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data.high.IFN
)
summary(model22.interaction_IFN1_no_normal_IFN1.aerobic_capacity.lmm, level = 0.975)
plot(model22.interaction_IFN1_no_normal_IFN1.aerobic_capacity.lmm, type = "scatterplot")
plot(model22.interaction_IFN1_no_normal_IFN1.aerobic_capacity.lmm, type = "qqplot")
plot(model22.interaction_IFN1_no_normal_IFN1.aerobic_capacity.lmm, type = "fit", facet=~sex)

plot(model22.interaction_IFN1_no_normal_IFN1.aerobic_capacity.lmm, type = "fit")
plot(model22.interaction_IFN1_no_normal_IFN1.aerobic_capacity.lmm, type = "partial", type.residual = c("(Intercept)","treat","timepoint"))


```

### We'll also answer SÃ¸ren Js question on the quality controlled data

```{r}
vo2max.data.high.IFN_QC <- 
  vo2_with_quality_controls |> 
  dplyr::filter(easytrialQualityTest) |> 
  filter(ifn_1_netto>2)

model23.main_no_normal_IFN_afterQC.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data.high.IFN_QC)
summary(model23.main_no_normal_IFN_afterQC.aerobic_capacity.lmm, level =0.975)
plot(model23.main_no_normal_IFN_afterQC.aerobic_capacity.lmm, type = "scatterplot")
plot(model23.main_no_normal_IFN_afterQC.aerobic_capacity.lmm, type = "qqplot")
#linear.mixed.model.list$model23.main_no_normal_m_1_2_afterQC.aerobic_capacity.lmm <-
#  model.tables(model23.main_no_normal_m_1_2_afterQC.aerobic_capacity.lmm, level = 0.975)

model24.interaction_IFN_only_normal_IFN.aerobic_capacity_QC.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat:timepoint+ifn_1_netto+timepoint:ifn_1_netto+treat:timepoint:ifn_1_netto+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data.high.IFN_QC
)
summary(model24.interaction_IFN_only_normal_IFN.aerobic_capacity_QC.lmm, level = 0.975)
plot(model24.interaction_IFN_only_normal_IFN.aerobic_capacity_QC.lmm, type = "scatterplot")
plot(model24.interaction_IFN_only_normal_IFN.aerobic_capacity_QC.lmm, type = "qqplot")


vo2max.data.low.IFN_QC <- 
  vo2_with_quality_controls |> 
  dplyr::filter(easytrialQualityTest) |> 
  filter(ifn_1_netto<=2)

model.main_only_normal_IFN_afterQC.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data.low.IFN_QC)
summary(model.main_only_normal_IFN_afterQC.aerobic_capacity.lmm, level =0.975)
plot(model.main_only_normal_IFN_afterQC.aerobic_capacity.lmm, type = "scatterplot")
plot(model.main_only_normal_IFN_afterQC.aerobic_capacity.lmm, type = "qqplot")
#linear.mixed.model.list$model23.main_no_normal_m_1_2_afterQC.aerobic_capacity.lmm <-
#  model.tables(model23.main_no_normal_m_1_2_afterQC.aerobic_capacity.lmm, level = 0.975)

model.interaction_IFN_only_normal_IFN.aerobic_capacity_QC.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat:timepoint+ifn_1_netto+timepoint:ifn_1_netto+treat:timepoint:ifn_1_netto+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = vo2max.data.low.IFN_QC
)
summary(model.interaction_IFN_only_normal_IFN.aerobic_capacity_QC.lmm, level = 0.975)
plot(model.interaction_IFN_only_normal_IFN.aerobic_capacity_QC.lmm, type = "scatterplot")
plot(model.interaction_IFN_only_normal_IFN.aerobic_capacity_QC.lmm, type = "qqplot")
```

So the interaction is stronger in that case. Which is quite interesting.

### Does the effect go through diffusion capacity?

```{r}
lfu.data <- 
  read_excel(
    path=
      here("Data", 
           "easy_trial_seperate_schemes",
           "_d_visit__lfu.data .xlsx"))|>
  mutate( 
    timepoint = case_when(
               grepl("aseline", task_name) ~ "baseline",
               grepl("ollow", task_name) ~ "followup"
             ),
             treat = ifelse(timepoint == "baseline", "control", treatment))

lfu.vo2<-
  vo2_with_quality_controls|>
  left_join(lfu.data, by = join_by(id, timepoint,treat,ifn_1_netto,sex))|>
  relocate(id, timepoint,treat,ifn_1_netto,sex,aerobiccapacity,kco_pred)|>
  dplyr::filter(
    timepoint != "screening"
  )
lfu.vo2$kco_pred


vo2max.ifn.vs.kco<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    treat+
    ifn_1_netto+
    kco_pred+
    timepoint:ifn_1_netto+
    treat:timepoint+
    #treat:ifn_1_netto+
    #treat:kco_pred+
    kco_pred:treat:timepoint+
    ifn_1_netto:treat:timepoint+
    #m_1_2:treat:timepoint:kco_pred+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.vo2)
summary(vo2max.ifn.vs.kco, level =0.95)
plot(vo2max.ifn.vs.kco, type = "scatterplot")
plot(vo2max.ifn.vs.kco, type = "qqplot")
plot(vo2max.ifn.vs.kco, type = "fit", obs.alpha = 0.2, ci =F,
    facet = ~ cut_interval(ifn_1_netto, 2) + cut_interval(kco_pred, 2), color = "treat")
##WHEN CORRECTING FOR KCO THE CORRELATION BECOMES CLEARER!

kco.vs.ifn1.lmm <- lmm(
  formula = kco_pred ~ 
    timepoint+
    treat+
    ifn_1_netto+
    treat:timepoint+
    timepoint:ifn_1_netto+
    ifn_1_netto:treat:timepoint+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.vo2)

summary(kco.vs.ifn1.lmm)


kco.vs.ifn1.nointeract.lmm <- lmm(
  formula = kco_pred ~ 
    timepoint+
    treat+
    ifn_1_netto+
    treat:timepoint+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.vo2)

summary(kco.vs.ifn1.nointeract.lmm)

kco.vs.ifn1.notreat.lmm <- lmm(
  formula = kco_pred ~ 
    timepoint+
    ifn_1_netto+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.vo2)

summary(kco.vs.ifn1.notreat.lmm)


dlco.vs.ifn1.lmm <- lmm(
  formula = dlc_oc_pred ~ 
    timepoint+
    ifn_1_netto+
    treat:timepoint+
    timepoint:ifn_1_netto+
    ifn_1_netto:treat:timepoint+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.vo2)

summary(dlco.vs.ifn1.lmm)

dlco.vs.ifn1.no_interact.lmm <- lmm(
  formula = dlc_oc_pred ~ 
    timepoint+
    ifn_1_netto+
    treat:timepoint+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.vo2)

summary(dlco.vs.ifn1.no_interact.lmm)

dlco.vs.ifn1.notreat.lmm <- lmm(
  formula = dlc_oc_pred ~ 
    timepoint+
    ifn_1_netto+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = lfu.vo2)

summary(dlco.vs.ifn1.notreat.lmm)

plot(dlco.vs.ifn1.notreat.lmm, time.var="ifn_1_netto", color = "sex")

lfu.vo2|>
  ggplot(aes(y=dlc_oc_pred, x=ifn_1_netto, col = treat))+
  geom_point()+
  stat_smooth(method = "lm")

lfu.vo2|>
  dplyr::filter(timepoint == "baseline")|>
  ggplot(aes(y=dlc_oc_pred, x=ifn_1_netto))+
  geom_point()+
  stat_smooth(method = "lm")
```

## Per Protocol effect of amount of successful exercise sessions and effect of attendance

```{r}
if(PP){
full_vo2_with_quality_controls<-
  vo2max.data.full|>
  left_join(PP_list)|>
  left_join(data_vo2max_QC)|>
  mutate(timepoint = 
           factor(timepoint, 
                  levels = 
                    c("screening", "baseline", "followup")))

Easytrial_Vo2max_full <- 
  full_vo2_with_quality_controls |> 
  dplyr::filter(
  easytrialQualityTest)|>
  group_by(id) %>% 
    filter(!duplicated(timepoint))

PP.IFN.log.reg <-
  glmer(
    formula = PP~ifn_1_netto+(1|id),
    family = "binomial",
    data = Easytrial_Vo2max_full|>dplyr::filter(treatment=="exercise")
  )
  
summary(PP.IFN.log.reg)
#So there seems to be no effect on IFN-1 score on chance to complete per protocol in the exercise group
#plot(PP.IFN.log.reg)

model.main_QC_PP.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_full|>dplyr::filter(PP)
)

summary(model.main_QC_PP.aerobic_capacity.lmm, level = 0.975)
plot(model.main_QC_PP.aerobic_capacity.lmm, type = "scatterplot")
plot(model.main_QC_PP.aerobic_capacity.lmm, type = "qqplot")


model.main_noscreen_QC_PP.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_full|>dplyr::filter(PP)|>dplyr::filter(timepoint!="screening")
)

summary(model.main_noscreen_QC_PP.aerobic_capacity.lmm, level = 0.975)
plot(model.main_noscreen_QC_PP.aerobic_capacity.lmm, type = "scatterplot")
plot(model.main_noscreen_QC_PP.aerobic_capacity.lmm, type = "qqplot")



model.interaction_QC_PP.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    treat:timepoint+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    treat:timepoint:ifn_1_netto+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_full|>dplyr::filter(PP)
)

summary(model.interaction_QC_PP.aerobic_capacity.lmm, level = 0.975)
plot(model.interaction_QC_PP.aerobic_capacity.lmm, type = "scatterplot")
plot(model.interaction_QC_PP.aerobic_capacity.lmm, type = "qqplot")
#anova(model1.kondital.lmm)

model.no_screen_interaction_QC_PP.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ 
    timepoint+
    treat:timepoint+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    treat:timepoint:ifn_1_netto+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_full|>dplyr::filter(PP)|>dplyr::filter(timepoint!="screening")
)

summary(model.no_screen_interaction_QC_PP.aerobic_capacity.lmm, level = 0.975)
plot(model.no_screen_interaction_QC_PP.aerobic_capacity.lmm, type = "scatterplot")
plot(model.no_screen_interaction_QC_PP.aerobic_capacity.lmm, type = "qqplot")


###VO2max PP model
model.main_QC_PP.vo2max.lmm<-lmm(
  formula = vo_2_max ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_full|>dplyr::filter(PP)
)

summary(model.main_QC_PP.vo2max.lmm)
plot(model.main_QC_PP.vo2max.lmm, type = "scatterplot")
plot(model.main_QC_PP.vo2max.lmm, type = "qqplot")

model.interaction_QC_PP.vo2max.lmm<-lmm(
  formula = vo_2_max ~ 
    timepoint+
    treat:timepoint+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    treat:timepoint:ifn_1_netto+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_full|>dplyr::filter(PP)
)

summary(model.interaction_QC_PP.vo2max.lmm)
plot(model.interaction_QC_PP.vo2max.lmm, type = "scatterplot")
plot(model.interaction_QC_PP.vo2max.lmm, type = "qqplot")


model.main_noscreen_QC_PP.vo2max.lmm<-lmm(
  formula = vo_2_max ~ timepoint+treat:timepoint+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_full|>dplyr::filter(PP)|>dplyr::filter(timepoint!="screening")
)

summary(model.main_noscreen_QC_PP.vo2max.lmm)
plot(model.main_noscreen_QC_PP.vo2max.lmm, type = "scatterplot")
plot(model.main_noscreen_QC_PP.vo2max.lmm, type = "qqplot")

model.no_screen_interaction_QC_PP.vo2max.lmm<-lmm(
  formula = vo_2_max ~ 
    timepoint+
    treat:timepoint+
    ifn_1_netto+
    ifn_1_netto:timepoint+
    treat:timepoint:ifn_1_netto+
    sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_full|>dplyr::filter(PP)|>dplyr::filter(timepoint!="screening")
)

summary(model.no_screen_interaction_QC_PP.vo2max.lmm)
plot(model.no_screen_interaction_QC_PP.vo2max.lmm, type = "scatterplot")
plot(model.no_screen_interaction_QC_PP.vo2max.lmm, type = "qqplot")


model25.main_QC_PP_effect.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat:timepoint:PP+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_full
)

summary(model25.main_QC_PP_effect.aerobic_capacity.lmm, level = 0.975)
plot(model25.main_QC_PP_effect.aerobic_capacity.lmm, type = "scatterplot")
plot(model25.main_QC_PP_effect.aerobic_capacity.lmm, type = "qqplot")
#anova(model1.kondital.lmm)


model26.main_QC_attendance_effect.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat:timepoint+attendance+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_full
)
summary(model26.main_QC_attendance_effect.aerobic_capacity.lmm, level = 0.975)
plot(model26.main_QC_attendance_effect.aerobic_capacity.lmm, type = "scatterplot")
plot(model26.main_QC_attendance_effect.aerobic_capacity.lmm, type = "qqplot")
#anova(model1.kondital.lmm)
effects(model26.main_QC_attendance_effect.aerobic_capacity.lmm, variable = NULL)

model.tables(model26.main_QC_attendance_effect.aerobic_capacity.lmm, level = 0.975)


model27.main_QC_succesfulexercise_effect.aerobic_capacity.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+treat:timepoint+successful_exercise+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_full
)
summary(model27.main_QC_succesfulexercise_effect.aerobic_capacity.lmm)
plot(model27.main_QC_succesfulexercise_effect.aerobic_capacity.lmm, type = "scatterplot")
plot(model27.main_QC_succesfulexercise_effect.aerobic_capacity.lmm, type = "qqplot")
#anova(model1.kondital.lmm)
effects(model27.main_QC_succesfulexercise_effect.aerobic_capacity.lmm, variable = NULL)


#TODO check model.tables funktionen til at hive summary scores ud af LMM-objekter.

model28.interaction_ifn1_PP_effect_QC.aerobic_capacity_QC.lmm<-lmm(
  formula = aerobiccapacity ~ timepoint+PP:treat:timepoint+ ifn_1_netto+timepoint:ifn_1_netto+PP:treat:timepoint:ifn_1_netto+sex,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_full
    
)

#TODO Add effect of Anti-DsDNA
#TODO check most stable IFN-signature

summary(model28.interaction_ifn1_PP_effect_QC.aerobic_capacity_QC.lmm, 
        level = 0.975)
plot(model28.interaction_ifn1_PP_effect_QC.aerobic_capacity_QC.lmm, type = "scatterplot")
plot(model28.interaction_ifn1_PP_effect_QC.aerobic_capacity_QC.lmm, type = "qqplot")
#anova(model2.kondital.lmm)

effects(model28.interaction_ifn1_PP_effect_QC.aerobic_capacity_QC.lmm, variable = NULL)

}
```

## Loop over the interaction effects:

```{r}
list_of_scores_to_see_differences_over <- c(
  "all_ifn",
  "all_ifn_geomean",
  "j_williams_aerobic",
  "j_williams_aerobic_geomean",
  "m_1_2", 
  "m_1_2_geomean",
  "m_3_4", 
  "m_3_4_geomean",
  "m_5_12", 
  "m_5_12_geomean",
  "ifn_1_el_sherb", 
  "ifn_1_el_sherb_geomean",
  "ifn_2_el_sherb", 
  "ifn_2_el_sherb_geomean",
  "tnf_related", 
  "tnf_related_geomean",
  "il_6_related", 
  "il_6_related_geomean",
  "ifn_alpha_siddiqi",
  "ifn_alpha_siddiqi_geomean",
  "ifn_beta_siddiqi",
  "ifn_beta_siddiqi_geomean",
  "ifn_gamma_siddiqi",
  "ifn_gamma_siddiqi_geomean")

list_of_vo2max_ifn_scores<-list()

for (IFNsig in list_of_scores_to_see_differences_over){
  i<-as.character(28+which(list_of_scores_to_see_differences_over==IFNsig))
  model_name <- paste0("model",
                       i,
                       ".interaction_",
                       IFNsig,
                       ".aerobic_capacity.lmm")
  
interaction.aerobiccapacity.lmm<-lmm(
  formula = reformulate(paste0("timepoint+treat:timepoint+",IFNsig,"+treat:timepoint:",IFNsig,"+sex"),
                        response="aerobiccapacity"),
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max_no_screening
)

summary(interaction.aerobiccapacity.lmm, level = 0.975)
plot(interaction.aerobiccapacity.lmm, type=c("qqplot"))
plot(interaction.aerobiccapacity.lmm, type=c("scatterplot"))

list_of_vo2max_ifn_scores[[model_name]] <- 
  model.tables(interaction.aerobiccapacity.lmm, level = 0.975)

#list_of_vo2max_ifn_scores[[model_name]]$qqplot <- 
 # plot(interaction.aerobiccapacity.lmm, type=c("qqplot"))

#list_of_vo2max_ifn_scores[[model_name]]$scatterplot <- 
 # plot(interaction.aerobiccapacity.lmm, type=c("scatterplot"))

}
#linear.mixed.model.list$ifn_score_interactions_fatigue<-list_of_fatigue_ifn_scores
#list_of_vo2max_ifn_scores
#linear.mixed.model.list$list_of_vo2max_ifn_scores<-list_of_vo2max_ifn_scores
```

## Graphics

```{r}
plot.model.main.lmm<-
  plot(model.main_after_QC.aerobic_capacity.lmm, 
     at = data.frame(sex = "F"),
     type = "fit", 
     color = "treatment",
     ci = F,
     obs.alpha = 0.25)

ggsave(
  plot = plot.model.main.lmm$plot+theme_bw(),
  filename = here("output","graphics",
                  paste0("aerobic_capacity.plot", ifelse(PP, "PP",""),
                         ".jpg")),
  width = 12
)


Easytrial_Vo2max$treat2


model.ifn1_interaction_after_QC.aerobic_capacity.forgraph.lmm<-lmm(
  formula = aerobiccapacity ~ 
    sex+
    treat2+
    ifn_1_netto+
    ifn_1_netto:treat2,
  repetition = ~timepoint|id,
  structure = "UN",
  data = Easytrial_Vo2max
  )

summary(model.ifn1_interaction_after_QC.aerobic_capacity.forgraph.lmm)

partial.plot<-
  plot(model.ifn1_interaction_after_QC.aerobic_capacity.forgraph.lmm,
     type = "partial", 
     variable = c("(Intercept)","ifn_1_netto","treat2")
     )

partial.plot$plot+
  geom_point(aes(color = treat, y = aerobiccapacity, x = ifn_1_netto), data = Easytrial_Vo2max)

plot(model11.all_ifn_interaction_after_QC.aerobic_capacity.lmm, 
     type = "fit", 
     color="treatment",
     ci=F,
     time.var = "timepoint",
     obs.alpha = 0.5, 
     facet = ~ cut_interval(ifn_1_netto, 3))

aerobiccapacity_ifn_quants.plot<-
  plot(model11.all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, 
     type = "fit", color = "treatment", obs.alpha = 0.5, ci = F,
     time.var = "timepoint", facet = ~ cut_interval(all_ifn, 3))

saveRDS(
  object = aerobiccapacity_ifn_quants.plot,
  file = 
    here("output","graphics",
         paste0("aerobic_capacity_ifn_quants.plot", ifelse(PP, "PP",""),
                ".rds")))

ggsave(
  plot = aerobiccapacity_ifn_quants.plot$plot,
  filename = here("output","graphics",
                  paste0("aerobic_capacity_ifn_quants.plot", ifelse(PP, "PP",""),
                         ".jpg")),
  width = 12
)

aerobiccapacity_ifn1_quants.plot<-
  plot(model.ifn_1_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, 
     type = "fit", color = "treatment", obs.alpha = 0.5, ci = F,
     time.var = "timepoint", facet = ~ cut_interval(ifn_1_netto, 3))



aerobiccapacity_ifn1_median_plot<-
  plot(model.ifn_1_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, 
     type = "fit", color = "treatment", obs.alpha = 0.5, ci = F, 
     at = data.frame(ifn_1_netto = median(Easytrial_Vo2max$ifn_1_netto, na.rm =T),
                     sex = "F"),
     time.var = "timepoint")

aerobiccapacity_ifn1_q1_plot<-
  plot(model.ifn_1_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, 
     type = "fit", color = "treatment", obs.alpha = 0.5, ci = F, 
     at = data.frame(ifn_1_netto = quantile(Easytrial_Vo2max$ifn_1_netto, probs = 0.25, na.rm =T),
                     sex = "F"),
     time.var = "timepoint")

aerobiccapacity_ifn1_q3_plot<-
  plot(model.ifn_1_netto_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, 
     type = "fit", color = "treatment", obs.alpha = 0.5, ci = F, 
     at = data.frame(ifn_1_netto =quantile(Easytrial_Vo2max$ifn_1_netto, probs = 0.75, na.rm =T),
                     sex = "F"),
     time.var = "timepoint")

q1_plot<-aerobiccapacity_ifn1_q1_plot$plot+
  ggtitle("IFN 25% Quantile",
          subtitle = "Counterfactual Plot")+
  theme(legend.position = "none")
med_plot<-aerobiccapacity_ifn1_median_plot$plot+
  ggtitle("IFN Median",
          subtitle = "Counterfactual Plot")+
  theme(legend.position = "none")
q3_plot<-
  aerobiccapacity_ifn1_q3_plot$plot+
  ggtitle("IFN 75% Quantile",
          subtitle = "Counterfactual Plot")+
  theme(legend.position = "right")

q1_plot+  med_plot+  q3_plot


saveRDS(
  object = aerobiccapacity_ifn1_quants.plot,
  file = 
    here("output","graphics",
         paste0("aerobic_capacity_type1_ifn_quants.plot", ifelse(PP, "PP",""),
                ".rds")))

ggsave(
  plot = aerobiccapacity_ifn1_quants.plot$plot,
  filename = here("output","graphics",
                  paste0("aerobic_capacity_type1_ifn_quants.plot", ifelse(PP, "PP",""),
                         ".jpg")),
  width = 12
)

#spaghettiplot.Vo2Max<-vo2max.data%>%ggplot(
 # aes(
#    x=timepoint,
#    y=kondital))+
#  geom_point(aes(colour=treat))+
#  geom_line(aes(group=id, colour=treat))

#spaghettiplot.Vo2Max
#ggplotly(spaghettiplot.Vo2Max)


#plot(model2.kondital.lmm, type = "fit", obs.alpha = 0.4, ci = FALSE, size.text = 20, colo="treatment")

#plot(model2.kondital.easytrialQC.lmm, type = "fit", obs.alpha = 0.4, ci = FALSE, size.text = 20, colo="treatment")



#plot(model2.kondital.lmm, type = "fit", color = "treatment", ci.alpha = 0.02, size.text = 20)
#
#plot(model.noscreen.kondital.lmm, type = "fit", color = "treatment", ci.alpha = NA, size.text = 20)

#plot(model17.IFN_interaction_after_QC.onlyBaselineFU.aerobic_capacity_diff_at_followup.lmm, type = "fit",
 #    color = "treatment", obs.alpha = 0.5, ci = F,
  #   time.var = "timepoint", facet = ~ cut_interval(all_ifn, 3))



```

## Predict-Plot model against observed values

```{r eval =F}

model.ifn1_interaction_after_QC_withscreen.aerobic_capacity.lmm

new_data<-
  data.frame(sex = Easytrial_Vo2max$sex, 
        ifn_1_netto = median(Easytrial_Vo2max$ifn_1_netto,na.rm=T), 
        treat = Easytrial_Vo2max$treat,
        timepoint = Easytrial_Vo2max$timepoint,
        id = Easytrial_Vo2max$id,
        aerobiccapacity = Easytrial_Vo2max$aerobiccapacity)

predictions<-
  predict(object = model.ifn1_interaction_after_QC_withscreen.aerobic_capacity.lmm,
        newdata = new_data,
        se = T,
        type = "static",
        keep.data = T
        )

predictions$ifn_1_netto<-Easytrial_Vo2max$ifn_1_netto

predictions|>
  ggplot(aes(
  x = ifn_1_netto,
  y = estimate,
  group = treat))+
  stat_smooth(method = "lm")

```

## Graphics (and exploratory models) on change scores:

```{r}
library(tidyr)
vo2max.data.wide<-
  Easytrial_Vo2max |>
  dplyr::select(id, treatment, timepoint,
         aerobiccapacity, vo_2_max, sex,
         ifn_1_netto,
         all_ifn, all_ifn_geomean,
         m_1_2, m_1_2_geomean, m_3_4, m_3_4_geomean, 
         m_5_12, m_5_12_geomean, ifn_1_el_sherb, ifn_1_el_sherb_geomean,
         ifn_2_el_sherb, ifn_2_el_sherb_geomean, ifn_2_siddiqi,
         ifn_2_siddiqi_geomean)|>
  pivot_wider(
  names_from = "timepoint",
  id_cols = c("id", "treatment", "sex", "ifn_1_netto","all_ifn", "all_ifn_geomean", "m_1_2", "m_1_2_geomean", "m_3_4", "m_3_4_geomean", "m_5_12", "m_5_12_geomean", "ifn_1_el_sherb", "ifn_1_el_sherb_geomean", "ifn_2_el_sherb", "ifn_2_el_sherb_geomean", "ifn_2_siddiqi", "ifn_2_siddiqi_geomean"),
  values_from = c("aerobiccapacity", "vo_2_max")
)%>%dplyr::filter(!is.na(aerobiccapacity_followup))|>
  dplyr::filter(!is.na(all_ifn))|>
  mutate(
  delta_aerobiccapacity = case_when( 
      !is.na(aerobiccapacity_screening) & 
      !is.na(aerobiccapacity_baseline) ~
    round(aerobiccapacity_followup-(aerobiccapacity_screening+aerobiccapacity_baseline)/2,2),
    
    is.na(aerobiccapacity_screening) ~ round(aerobiccapacity_followup-aerobiccapacity_baseline,2),
    is.na(aerobiccapacity_baseline) ~ round(aerobiccapacity_followup-aerobiccapacity_screening,2),
    T~ NA_real_
    ),
  delta_vo2max = round(vo_2_max_followup -(vo_2_max_screening+vo_2_max_baseline)/2,1),
  delta_aerobiccapacity_BLFU = aerobiccapacity_followup - aerobiccapacity_baseline,
  delta_vo2max_BLFU = vo_2_max_followup - vo_2_max_baseline,
  delta_aerobiccapacity_SCFU = aerobiccapacity_followup - aerobiccapacity_screening,
  delta_vo2max_SCFU = vo_2_max_followup - vo_2_max_screening,
  sex_treat = paste0(case_when(
    sex == "F" ~ "Female",
    sex == "M" ~ "Male",
    T ~ NA_character_ ), " and ", treatment)
)

write_xlsx(vo2max.data.wide,
           path = here("Data",paste0(
                       "Vo2max.Data.Wide.EasytrialQC_",
                       ifelse(PP,"PP","mITT"),".xlsx")))

aerobic_capacity_by_allIFN <- 
  ggplot(vo2max.data.wide, aes(x = all_ifn, y = delta_aerobiccapacity, colour = treatment)) +
  geom_point() +  
  geom_smooth(method="lm", se=T, level = 0.975) + 
        theme_bw() +
  labs(title = "Change in Aerobic Capacity by treatment and IFN-1 score",
       subtitle = ifelse(PP, "In the PP Analysis", "in the mITT analysis"),
       x = "All IFN score (SD)",
       y = "\u0394 Aerobic Capacity (ml/min/kg)",
       colour = "Intervention Group")

aerobic_capacity_by_allIFN
ggsave(filename=here("Output","Graphics",
                     paste0("aerobic_capacity_by_allIFN",ifelse(PP,"PP",""),".jpg")),
  plot=aerobic_capacity_by_allIFN)

aerobic_capacity_by_allIFN_geomean <- 
  ggplot(vo2max.data.wide, aes(x = all_ifn_geomean, y = delta_aerobiccapacity, colour = treatment)) +
  geom_point() +  
  geom_smooth(method="lm", se=T, level = 0.975) + 
        theme_bw() 

aerobic_capacity_by_allIFN_geomean

#kondi_by_IFN1_el.sherb <- ggplot(vo2max.data.wide, aes(x = ifn_1_el_sherb, y = delta_kondi, colour = treatment)) +
# geom_point() +  geom_smooth(method="lm", se=T, level = 0.975) + 
#        theme_bw() 

#kondi_by_IFN1_el.sherb

model.delta_aerobiccapacity<-lm(delta_aerobiccapacity ~ sex+
                        aerobiccapacity_baseline+ifn_1_netto * treatment, 
                      data = vo2max.data.wide)
summary(model.delta_aerobiccapacity)

model.BLFU.aerobiccapacity<-lm(delta_aerobiccapacity_BLFU ~ sex+treatment+ifn_1_netto+ifn_1_netto : treatment, data = vo2max.data.wide)
summary(model.BLFU.aerobiccapacity)

model.SCFU.aerobiccapacity<-lm(delta_aerobiccapacity_SCFU ~ ifn_1_netto * treatment, data = vo2max.data.wide)
summary(model.SCFU.aerobiccapacity)

aerobiccapacity_BLFU_IFN_geomean <- 
  ggplot(vo2max.data.wide, aes(x = all_ifn_geomean , y = delta_aerobiccapacity_BLFU, colour = treatment)) +
  geom_point() +  geom_smooth(method="lm", se=T, level = 0.975) + 
        theme_bw()
aerobiccapacity_BLFU_IFN_geomean

aerobiccapacity_BLFU_IFN <- 
  ggplot(vo2max.data.wide, aes(x = ifn_1_netto, 
                               y = delta_aerobiccapacity_BLFU, 
                               colour = treatment)) +
  geom_point() +  
  geom_smooth(method="lm", se=T, level = 0.975) + 
  theme_bw()+
  labs(title = "Change in Aerobic Capacity by treatment and IFN-1 score",
       x = "IFN-1 score (SD)",
       y = "\u0394 Aerobic Capacity (ml/min/kg)",
       colour = "Treatment")+
  scale_colour_discrete(name="Treatment",
                         breaks=c("control", "exercise"),
                         labels=c("Control", "Exercise"))
aerobiccapacity_BLFU_IFN
ggsave(filename=here("Output","Graphics",paste0(
          "aerobiccapacity_change_BL_To_FU_by_IFN", 
  ifelse(PP,"PP",""),
  ".jpg")),
  plot=aerobiccapacity_BLFU_IFN)

lab_names <- list(
  "F" = "Female",
  "M" = "Male"
)

lab_sex <- function(variable,value){
  return(lab_names[value])
}

aerobiccapacity_BLFU_IFN + facet_wrap(~sex, labeller = lab_sex)
ggsave(filename=here("Output","Graphics",paste0(
          "aerobiccapacity_change_BL_To_FU_by_IFN_Facet_Sex", 
  ifelse(PP,"PP",""),
  ".jpg")),
  plot=aerobiccapacity_BLFU_IFN + facet_wrap(~sex, labeller = lab_sex))


aerobiccapacity_BLFU_IFN_sex <- 
  ggplot(vo2max.data.wide, aes(x = ifn_1_netto, 
                               y = delta_aerobiccapacity_BLFU,
                               color = sex_treat)) +
  geom_point() +  
  geom_smooth(method="lm", se=T, level = 0.975) + 
  theme_bw()+
  labs(title = "Change in Aerobic Capacity by treatment and IFN-1 score",
       x = "IFN-1 score (SD)",
       y = "\u0394 Aerobic Capacity (ml/min/kg)",
       colour = "Treatment")

aerobiccapacity_BLFU_IFN_sex
ggsave(filename=here("Output","Graphics",paste0(
          "aerobiccapacity_change_BL_To_FU_by_IFN_sex_shape", 
  ifelse(PP,"PP",""),
  ".jpg")),
  plot=aerobiccapacity_BLFU_IFN)


vo2_by_IFN <- 
  ggplot(vo2max.data.wide, aes(x = ifn_1_netto, y = delta_vo2max, colour = treatment)) +
  geom_point() +  
  geom_smooth(method="lm", se=T, level = 0.975) + 
  theme_bw() 

vo2_by_IFN

model.delta.vo2<-lm(delta_vo2max ~  ifn_1_netto * treatment, data = vo2max.data.wide)
summary(model.delta.vo2)


```

## Graphics PP

```{r}
if(PP){
  vo2max.data.wide.full<-
    Easytrial_Vo2max_full |>
  dplyr::select(id, treatment, timepoint,
         aerobiccapacity, vo_2_max, sex, PP,
         ifn_1_netto,
         all_ifn, all_ifn_geomean,
         m_1_2, m_1_2_geomean, m_3_4, m_3_4_geomean, 
         m_5_12, m_5_12_geomean, ifn_1_el_sherb, ifn_1_el_sherb_geomean,
         ifn_2_el_sherb, ifn_2_el_sherb_geomean, ifn_2_siddiqi,
         ifn_2_siddiqi_geomean)|>
  pivot_wider(
  names_from = "timepoint",
  id_cols = c("id", "treatment", "sex","PP","ifn_1_netto", "all_ifn", "all_ifn_geomean", "m_1_2", "m_1_2_geomean", "m_3_4", "m_3_4_geomean", "m_5_12", "m_5_12_geomean", "ifn_1_el_sherb", "ifn_1_el_sherb_geomean", "ifn_2_el_sherb", "ifn_2_el_sherb_geomean", "ifn_2_siddiqi", "ifn_2_siddiqi_geomean"),
  values_from = c("aerobiccapacity", "vo_2_max"))%>%
    dplyr::filter(!is.na(aerobiccapacity_followup))|>
  dplyr::filter(!is.na(ifn_1_netto))|>
  mutate(
 delta_aerobiccapacity = case_when( 
      !is.na(aerobiccapacity_screening) & 
      !is.na(aerobiccapacity_baseline) ~
    round(aerobiccapacity_followup-(aerobiccapacity_screening+aerobiccapacity_baseline)/2,2),
    is.na(aerobiccapacity_screening) ~ round(aerobiccapacity_followup-aerobiccapacity_baseline,2),
    is.na(aerobiccapacity_baseline) ~ round(aerobiccapacity_followup-aerobiccapacity_screening,2),
    T~ NA_real_
    ),
 delta_vo2max = round(vo_2_max_followup -(vo_2_max_screening+vo_2_max_baseline)/2,1),
  delta_aerobiccapacity_BLFU = aerobiccapacity_followup - aerobiccapacity_baseline,
  delta_vo2max_BLFU = vo_2_max_followup - vo_2_max_baseline,
  delta_aerobiccapacity_SCFU = aerobiccapacity_followup - aerobiccapacity_screening,
  delta_vo2max_SCFU = vo_2_max_followup - vo_2_max_screening,
  pp_treat = paste0(treatment," PP=",PP))

aerobiccapacity_by_IFN_PP_effect <- 
  ggplot(vo2max.data.wide.full, aes(x = ifn_1_netto, 
                                    y = delta_aerobiccapacity, 
                                    colour = pp_treat)) +
  geom_point() +  geom_smooth(method="lm", se=F, level = 0.975) + 
        theme_bw() +
  scale_colour_manual(
    labels = c("Control","Exercise not PP","Exercise PP"),
    values = c("hotpink","darkgreen","lightblue")
  )+
  labs(
    title = "Aerobic Capacity By IFN-1 signature",
    subtitle = "Per Protocol Analysis",
    x = "IFN-1 Signature (SD)",
    y = "\u0394 Aerobic Capacity (ml/kg/min)",
    colour = "Exercise Divided on Per Protocol"
  )

aerobiccapacity_by_IFN_PP_effect
aerobiccapacity_by_IFN_PP_effect + facet_wrap(~sex)

ggsave(
  plot = aerobiccapacity_by_IFN_PP_effect,
  filename = here("Output","Graphics","aerobiccapacity_by_IFN_PP_effect.jpg")
)
}
```

## Contrast Analysis

(Maybe) Deprecated since the SAP included a better solution

```{r eval = F}

Cont_vec_vo2 <-
  rbind(
    c( #At Screening
      1, #(Intercept)
      0, #timepointbaseline
      0, #timepointfollowup	
      0, #SexM	
      1, #all_IFN	
      0, #timepointfollowup:treatexercise
      0, #timepointbaseline:all_ifn
      0, #timepointfollowup:all_ifn
      0  #timepointfollowup:treatexercise:all_ifn
    ),
    c( #At Baseline
      1, #(Intercept)
      1, #timepointbaseline
      0, #timepointfollowup	
      0, #SexM	
      1, #all_IFN	
      0, #timepointfollowup:treatexercise
      1, #timepointbaseline:all_ifn
      0, #timepointfollowup:all_ifn
      0  #timepointfollowup:treatexercise:all_ifn
    ),
    c(   #Control at FU
      1, #(Intercept)
      0, #timepointbaseline
      1, #timepointfollowup	
      0, #SexM	
      1, #all_IFN	
      0, #timepointfollowup:treatexercise
      0, #timepointbaseline:all_ifn
      1, #timepointfollowup:all_ifn
      0  #timepointfollowup:treatexercise:all_ifn
    ),
    c(   #Exercise at FU
      1, #(Intercept)
      0, #timepointbaseline
      1, #timepointfollowup	
      0, #SexM	
      1, #all_IFN	
      1, #timepointfollowup:treatexercise
      0, #timepointbaseline:all_ifn
      1, #timepointfollowup:all_ifn
      1  #timepointfollowup:treatexercise:all_ifn
    ),
    c(   #Exercise at FU minus Control at FU
      1-1, #(Intercept)
      0-0, #timepointbaseline
      1-1, #timepointfollowup	
      0-0, #SexM	
      1-1, #all_IFN	
      1-0, #timepointfollowup:treatexercise
      0-0, #timepointbaseline:all_ifn
      1-1, #timepointfollowup:all_ifn
      1-0  #timepointfollowup:treatexercise:all_ifn
    ),
    c(   #Difference of IFN interaction
      0, #(Intercept)
      0, #timepointbaseline
      0, #timepointfollowup	
      0, #SexM	
      0, #all_IFN	
      0, #timepointfollowup:treatexercise
      0, #timepointbaseline:all_ifn
      0, #timepointfollowup:all_ifn
      1  #timepointfollowup:treatexercise:all_ifn
    ))
	
rownames(Cont_vec_vo2) <- c("Screening",
                            "Baseline",
                            "Control_FU",
                            "Exercise_FU", 
                            "Exercise_FU minus Control_FU", 
                            "Difference in IFN interaction exercise minus control")
summary(glht(model11.all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, linfct=Cont_vec_vo2), test=adjusted("none"))
confint(glht(model11.all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm, linfct=Cont_vec_vo2), test=adjusted("none"), level = 0.975)

aerobic_capacity_glht <- 
  model11.all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm|>
  glht(linfct=Cont_vec_vo2)|>
  butils::multcomp2table(
  method.glht = "glht", 
  conf.level = 0.975, 
  method.multcomp="none")|>
  mutate(
    outcome = as.character(model11.all_ifn_interaction_after_QC.aerobic_capacity_diff_at_followup.lmm$outcome[1]),
    outcome_priority = "Primary"
  )
  
aerobic_capacity_glht|>
  saveRDS(file = here("Output","Generalized linear hypothesis testing","aerobic_capacity_glht_table.rds"))

vo2max_glht <- 
  model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm|>
  glht(linfct=Cont_vec_vo2)|>
  butils::multcomp2table(
  method.glht = "glht", 
  conf.level = 0.975, 
  method.multcomp="none")|>
  mutate(
    outcome = as.character(model.interaction_IFN_vo2max_easytrialQC.vo2max.lmm$outcome[1]),
    outcome_priority = "Exploratory"
  )
  
vo2max_glht|>
  saveRDS(file = here("Output","Generalized linear hypothesis testing","vo2max_glht_table.rds"))


Cont_vec_vo2_BLFU <-
  rbind(
    c( #At Baseline
      1, #(Intercept)
      
      0, #timepointfollowup	
      1, #m_1_2	
      1, #sexM	
      0, #timepointfollowup:treatexercise
      
      0, #timepointfollowup:treatcontrol:m_1_2	
      0  #timepointfollowup:treatexercise:m_1_2
    ),
    c(   #Control at FU
      1, #(Intercept)
      
      1, #timepointfollowup	
      1, #m_1_2	
      1, #sexM	
      0, #timepointfollowup:treatexercise
      
      1, #timepointfollowup:treatcontrol:m_1_2	
      0  #timepointfollowup:treatexercise:m_1_2
    ),
    c(   #Exercise at FU
      1, #(Intercept)
      
      1, #timepointfollowup	
      1, #m_1_2	
      1, #sexM	
      1, #timepointfollowup:treatexercise
      
      0, #timepointfollowup:treatcontrol:m_1_2	
      1  #timepointfollowup:treatexercise:m_1_2
    ),
    c(   #Exercise at FU minus Control at FU
      1-1, #(Intercept)
      
      1-1, #timepointfollowup	
      1-1, #m_1_2	
      1-1, #sexM	
      1-0, #timepointfollowup:treatexercise
      
      0-1, #timepointfollowup:treatcontrol:m_1_2	
      1-0  #timepointfollowup:treatexercise:m_1_2
    ),
    c(   #Difference of M_1_2 interaction
      0, #(Intercept)
      
      0, #timepointfollowup	
      0, #m_1_2	
      0, #sexM	
      0, #timepointfollowup:treatexercise
      
      -1, #timepointfollowup:treatcontrol:m_1_2	
      1  #timepointfollowup:treatexercise:m_1_2
    ))

aerobic_capacity_BL_FU_glht<- 
model.ifn1_interaction_after_QC.aerobic_capacity.lmm|>
  glht(linfct=Cont_vec_vo2_BLFU)|>
  butils::multcomp2table(
  method.glht = "glht", 
  conf.level = 0.975, 
  method.multcomp="none")|>
  mutate(
    outcome = as.character(model.ifn1_interaction_after_QC.aerobic_capacity.lmm$outcome[1]),
    outcome_priority = "Exploratory"
  )

summary(model.ifn1_interaction_after_QC.aerobic_capacity.lmm)
aerobic_capacity_BL_FU_glht
```

## Waterfall plot

<https://stackoverflow.com/questions/16588022/how-can-i-reorder-the-x-axis-in-a-plot-in-r>

```{r}
#https://stackoverflow.com/questions/16588022/how-can-i-reorder-the-x-axis-in-a-plot-in-r
ggplot(vo2max.data.wide) + 
geom_bar(stat="identity", 
         aes(x=id, 
             y=delta_aerobiccapacity_BLFU,
             fill=treatment))

vo2max.data.wide.forwaterfall <- 
  vo2max.data.wide %>% 
  filter(!is.na(delta_aerobiccapacity_BLFU))%>% 
  arrange(-delta_aerobiccapacity_BLFU)

vo2max.data.wide.forwaterfall$id <- 
  as.vector(
    stringr::str_sub(
      vo2max.data.wide.forwaterfall$id,start = 1)) #get rid of factors

vo2max.data.wide.forwaterfall$id = 
  factor(vo2max.data.wide.forwaterfall$id, vo2max.data.wide.forwaterfall$id) #add ordered factors back

g<-ggplot(vo2max.data.wide.forwaterfall) + 
geom_bar(stat="identity", aes(x=id, y=delta_aerobiccapacity_BLFU,
                              fill=treatment, label = ifn_1_netto))
ggplotly(g)
g

vo2max.data.wide.forwaterfall <- vo2max.data.wide %>% filter(!is.na(delta_vo2max))%>% arrange(-delta_vo2max)
vo2max.data.wide.forwaterfall$id <- as.vector(stringr::str_sub(vo2max.data.wide.forwaterfall$id,start = 1)) #get rid of factors
vo2max.data.wide.forwaterfall$id = factor(vo2max.data.wide.forwaterfall$id,
                                                   vo2max.data.wide.forwaterfall$id) #add ordered factors back
g<-ggplot(vo2max.data.wide.forwaterfall) + 
geom_bar(stat="identity", aes(x=id, y=delta_vo2max,
                              fill=treatment, label = ifn_1_netto))
g


ggplotly(g)

vo2max.data.wide.forwaterfall.arr.ifn1 <- 
  vo2max.data.wide %>% filter(!is.na(delta_vo2max))%>% arrange(-ifn_1_netto)
vo2max.data.wide.forwaterfall.arr.ifn1$id <- as.vector(stringr::str_sub(vo2max.data.wide.forwaterfall$id,start = 1)) #get rid of factors
vo2max.data.wide.forwaterfall.arr.ifn1$id = factor(vo2max.data.wide.forwaterfall.arr.ifn1$id,
                                                   vo2max.data.wide.forwaterfall.arr.ifn1$id) #add ordered factors back
g<-ggplot(vo2max.data.wide.forwaterfall.arr.ifn1) + 
geom_bar(stat="identity", aes(x=id, y=delta_vo2max,
                              fill=treatment, label = ifn_1_netto))
g


ggplotly(g)

vo2max.data.wide.forwaterfall.arr.ifn1 <- vo2max.data.wide %>% filter(!is.na(delta_vo2max))%>% arrange(ifn_1_netto)
vo2max.data.wide.forwaterfall.arr.ifn1$id <- as.vector(stringr::str_sub(vo2max.data.wide.forwaterfall$id,start = 1)) #get rid of factors
vo2max.data.wide.forwaterfall.arr.ifn1$id = factor(vo2max.data.wide.forwaterfall.arr.ifn1$id,
                                                   vo2max.data.wide.forwaterfall.arr.ifn1$id) #add ordered factors back
g<-ggplot(vo2max.data.wide.forwaterfall.arr.ifn1) + 
geom_bar(stat="identity", aes(x=id, y=delta_aerobiccapacity_BLFU,
                              fill=treatment, label = ifn_1_netto))
g


ggplotly(g)
```

## The End

### Save the Linear Mixed Model List

```{r}

##Models to export (So we don't end up with the massive list we aren't using)


#saveRDS(
#  AerobicCapacityModels,
#  file = here("Output",
#                    paste0("Aerobic_capacity_LMM_List", ifelse(PP, "PP", "mITT"), ".rds"))
#)

if(!PP){ #TODO check if this condition can be removed.
  AerobicCapacityModels<-list(
  main.aerobic_capacity.lmm = model.tables(model.main_after_QC_with_screen.aerobic_capacity.lmm, level = 0.975),
  interaction.aerobic_capacity.lmm = model.tables(model.ifn1_interaction_after_QC_withscreen.aerobic_capacity.lmm, level = 0.975)
)

saveRDS(
  AerobicCapacityModels,
  file = here("Output","LMMlists","Aerobic_capacity_LMM_List.rds"))

  Vo2Models<-list(
  main.Vo2max.lmm = model.tables(model.main_after_QC.vo2max.lmm, level = 0.975),
  interaction.Vo2max.lmm = model.tables(model.ifn1_interaction_after_QC.vo2max.lmm, level = 0.975)
)
  
Vo2Models|>
saveRDS(
  file = here("Output","LMMlists","Vo2Max_LMM_List.rds")) 
}




if(PP){
  AerobicCapacityModelsPP<-list(
  main.aerobic_capacity.lmm = 
    model.tables(model.main_QC_PP.aerobic_capacity.lmm, level = 0.975),
  interaction.aerobic_capacity.lmm = 
    model.tables(model.interaction_QC_PP.aerobic_capacity.lmm, level = 0.975)
)
  
  saveRDS(
  AerobicCapacityModelsPP,
  file = here("Output","LMMlists","PP",
              "Aerobic_capacity_LMM_List.rds"))
  
   Vo2Models_PP<-list(
  main.Vo2max.lmm = model.tables(model.main_QC_PP.vo2max.lmm),
  interaction.Vo2max.lmm = model.tables(model.interaction_QC_PP.aerobic_capacity.lmm)
)
   Vo2Models_PP|>
saveRDS(
  file = here("Output","LMMlists","PP","Vo2Max_LMM_List.rds")) 
}


```

### Print "the end"

So Malte knows the code has finished when he just glances at the console.

```{r}
print("This is the end of Vo2MaxData.qmd")
if(PP){
  print("this was a PP analysis")
}
library(beepr)
beepr::beep("complete")
```
